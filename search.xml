<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端-CSS规范</title>
    <url>/posts/cd5ce6b9.html</url>
    <content><![CDATA[<h2 id="class、id命名规则"><a href="#class、id命名规则" class="headerlink" title="class、id命名规则"></a>class、id命名规则</h2><ol>
<li><p>class 不能使用驼峰 使用(烤串写法) </p>
<ul>
<li><p>命名建议：页面-属性-功能</p>
</li>
<li><p>公用类：修饰符-功能</p>
<p>例子：<code>class=&quot;login-dialog&quot;</code>  <code>class=&quot;login-form-dialog&quot;</code></p>
</li>
</ul>
</li>
</ol>
<ol start="2">
<li>id 一般参与样式，命名的话使用驼峰。</li>
</ol>
<h2 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h2><p>页面布局均采用最新版 <code>flexbox</code> 进行布局，需兼容低版本 IE 项目除外。</p>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><p>使用 <code>4</code> 个空格作为一个缩进层级，不允许使用 <code>2</code> 个空格。</p>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>每个属性声明末尾都要加分号</p>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><ul>
<li><p><code>:</code> 与属性值之间需要空格，与属性名之间不需要空格</p>
</li>
<li><p>属性值中的 <code>,</code> 后需要空格，<code>,</code> 前不需要空格</p>
</li>
<li><p>选择器 <code>&gt; + ~</code> 等前后需要空格</p>
</li>
<li><p>选择器与 <code>&#123;</code> 之间需要空格</p>
</li>
<li><p><code>/</code> 前后需要空格</p>
</li>
<li><p>注释 <code>/*</code> 后和 <code>*/</code> 前需要空格</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.selector</span> > <span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Hiragino Sans GB"</span>, sans-serif<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token url">url(logo.png)</span> no-repeat center / contain<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><ul>
<li><p>两个选择器属性块之间保留一个空行</p>
</li>
<li><p>代码块注释前与代码块后保留一个空行</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">/* 字体相关 */</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'DINPro'</span><span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>

    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><ul>
<li><p>当一个规则包含多个选择器时，每个选择器声明必须独占一行</p>
</li>
<li><p>每个属性定义必须另起一行</p>
</li>
<li><p><code>&#123;</code> 后需要换行，<code>&#125;</code> 前需要换行</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span>,
<span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li><p>统一使用 <code>/* */</code> 进行注释</p>
</li>
<li><p>缩进与下一行代码保持一致</p>
</li>
<li><p>可位于一个代码行的末尾，与代码间隔一个空格</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span>,
<span class="token class">.selector</span> </span><span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">/* 字体相关 */</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'DINPro'</span><span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 字重 */</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><ul>
<li><p>引号统一使用双引号</p>
</li>
<li><p>属性选择器中的属性值需要引号</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token attribute">[class="demo"]</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><ul>
<li><p>16 进制颜色使用小写字母</p>
</li>
<li><p>16 进制颜色尽量使用简写</p>
</li>
</ul>
<pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* good */</span>
<span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#abc</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* bad */</span>
<span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#AABBCC</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="属性简写"><a href="#属性简写" class="headerlink" title="属性简写"></a>属性简写</h2><p>支持简写的属性尽量使用简写<br>小数点前不需加<code>0</code></p>
<pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* better */</span>
<span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token url">url(logo.png)</span> no-repeat center / contain<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/* bad */</span>
<span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(logo.png)</span><span class="token punctuation">;</span>
    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
    <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="属性声明顺序"><a href="#属性声明顺序" class="headerlink" title="属性声明顺序"></a>属性声明顺序</h2><ol>
<li>影响文档流的属性（比如：<code>display / position / float / clear / visibility</code> 等）</li>
<li>自身盒模型的属性（比如：<code>width / height / margin / padding / border</code> 等）</li>
<li>排版相关属性（比如：<code>font / line-height / text-align / vertical-align</code> 等）</li>
<li>装饰性属性（比如：<code>color / background / opacity / cursor</code> 等） </li>
<li>CSS3 新特性（比如：<code>transform / transition / animation</code> 等）<blockquote>
<p>口诀: 显示大小文字背景</p>
</blockquote>
</li>
</ol>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li><p>不允许有空的规则</p>
</li>
<li><p>元素选择器用小写字母</p>
</li>
<li><p>属性值 <code>0</code> 后面不要加单位</p>
</li>
<li><p>无前缀的标准属性应该写在有前缀的属性后面</p>
</li>
<li><p>不要在一个文件里出现两个相同的规则</p>
</li>
<li><p>发布的代码中不要有 <code>@import</code></p>
</li>
<li><p>尽量不用 <code>*</code> 选择器</p>
</li>
<li><p>禁止使用<code>!important</code></p>
</li>
<li><p>禁止使用<code>id</code>去修饰样式</p>
</li>
<li><p>position和float 能不用浮动就不要用浮动 尤其是float（使用float请保证父标签能被子标签内容撑开）</p>
</li>
<li><p>不要使用【标签做修饰符】-&gt;影响渲染速度 (除了万不得已的情况下)</p>
</li>
</ul>
<h2 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h2><p>1、<a href="https://guide.aotu.io/docs/">凹凸使用实验室的前端开发规范</a><br>2、<a href="https://github.com/hardylinfee/styleguide">hardylinfee前端开发规范</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>前端-JS规范</title>
    <url>/posts/530fecf3.html</url>
    <content><![CDATA[<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><ul>
<li><p>变量</p>
<ul>
<li><p>命名方式：小驼峰</p>
</li>
<li><p>命名规范：前缀名词</p>
</li>
<li><p>命名建议：语义化</p>
</li>
</ul>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// bad</span>
<span class="token keyword">let</span> setCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> getTitle <span class="token operator">=</span> <span class="token string">"loginTable"</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// good</span>
<span class="token keyword">let</span> maxCount <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tableTitle <span class="token operator">=</span> <span class="token string">"loginTable"</span></code></pre>
<ul>
<li><p>常量</p>
<ul>
<li>常量全大写，用下划线连接</li>
</ul>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> MAX_COUNT <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></code></pre>
<ul>
<li><p>函数</p>
<ul>
<li><p>命名方式：小驼峰式命名法。</p>
</li>
<li><p>命名规范：前缀应当为动词。</p>
</li>
<li><p>命名建议：语义化</p>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>动词</th>
<th>含义</th>
<th>返回值</th>
</tr>
</thead>
<tbody><tr>
<td>can</td>
<td>判断是否可执行某个动作（权限）</td>
<td>函数返回一个布尔值。 true: 可执行， false: 不可执行</td>
</tr>
<tr>
<td>has</td>
<td>判断是否含有某个词</td>
<td>函数返回一个布尔值。 true: 含有此值， false: 不含有此值</td>
</tr>
<tr>
<td>is</td>
<td>判断是否为某个词</td>
<td>函数返回一个布尔值。 true: 为此值， false: 不为此值</td>
</tr>
<tr>
<td>get</td>
<td>获取某个词</td>
<td>函数返回一个非布尔值</td>
</tr>
<tr>
<td>set</td>
<td>设置某个词</td>
<td>无返回值，返回是否设置或返回链式对象</td>
</tr>
<tr>
<td>load</td>
<td>加载某些数据</td>
<td>无返回值或返回是否加载完成的结果</td>
</tr>
</tbody></table>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 是否可阅读</span>
<span class="token keyword">function</span> <span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">// 获取名称</span>
<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<ul>
<li><p>类 / 构造函数</p>
<ul>
<li><p>命名方式：大驼峰式命名法（每个单词首字母大写），首字母大写</p>
</li>
<li><p>命名规范：前缀为名称。</p>
</li>
<li><p>命名建议：语义化</p>
</li>
</ul>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> name<span class="token punctuation">:</span> string<span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">'mevyn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<ul>
<li>类的成员</li>
</ul>
<p>类的成员包含：<br>    * 公共属性和方法：跟变量和函数的命名一样。<br>    * 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> _name<span class="token punctuation">:</span> string<span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 公共方法</span>
    <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 公共方法</span>
    <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">'mervyn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ->mervyn</span></code></pre>
<ul>
<li><p>jquery 对象</p>
<ul>
<li>jquery 对象必须以 <code>$</code> 开头命名</li>
</ul>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> $body <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><ul>
<li><p>模块应该以 ! 开始。这样确保了当一个不好的模块忘记包含最后的分号时，在合并代码到生产环境后不会产生错误。详细说明</p>
</li>
<li><p>文件应该以驼峰式命名，并放在同名的文件夹里，且与导出的名字一致。</p>
</li>
<li><p>增加一个名为 noConflict() 的方法来设置导出的模块为前一个版本并返回它。</p>
</li>
<li><p>永远在模块顶部声明 ‘use strict’;。</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// fancyInput/fancyInput.js</span>

<span class="token operator">!</span><span class="token keyword">function</span> <span class="token punctuation">(</span>global<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string">'use strict'</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> previousFancyInput <span class="token operator">=</span> global<span class="token punctuation">.</span>FancyInput<span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">FancyInput</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    FancyInput<span class="token punctuation">.</span>noConflict <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        global<span class="token punctuation">.</span>FancyInput <span class="token operator">=</span> previousFancyInput<span class="token punctuation">;</span>
        <span class="token keyword">return</span> FancyInput<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    global<span class="token punctuation">.</span>FancyInput <span class="token operator">=</span> FancyInput<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<ul>
<li>构造函数<ul>
<li>给对象原型分配方法，而不是使用一个新对象覆盖原型。覆盖原型将导致继承出现问题：重设原型将覆盖原有原型！</li>
</ul>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">function</span> <span class="token function">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'new jedi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// bad</span>
    Jedi<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
        fight<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fighting'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        block<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'blocking'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// good</span>
    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>fight <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fighting'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>block <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'blocking'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>
<p>方法可以返回 this 来实现方法链式使用。</p>
<pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// bad</span>
    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>jump <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>setHeight <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">setHeight</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    luke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => true</span>
    luke<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>

    <span class="token comment" spellcheck="true">// good</span>
    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>jump <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    Jedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>setHeight <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">setHeight</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    luke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ul>
<li><p>使用 <code>4</code> 个空格做为一个缩进层级，不允许使用 <code>2</code> 个空格 或 <code>tab</code> 字符</p>
</li>
<li><p><code>switch</code> 下的 <code>case</code> 和 <code>default</code> 必须增加一个缩进层级</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">switch</span> <span class="token punctuation">(</span>variable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<ul>
<li>对象以缩进的形式书写，不要写在一行</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// better</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    b<span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// bad</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span></code></pre>
<h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>任何语句结尾都需要加分号 <code>;</code></p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">do</span> <span class="token punctuation">{</span>
    x<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><ul>
<li><p>二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格</p>
</li>
<li><p>用作代码块起始的左花括号 <code>&#123;</code> 前必须有一个空格</p>
</li>
<li><p><code>if / else / for / while / function / switch / do / try / catch / finally</code> 等关键字后，必须有一个空格</p>
</li>
<li><p>在非三目运算符中，<code>:</code> 之后必须有空格，之前不允许有空格</p>
</li>
<li><p><code>,</code> 和 <code>;</code> 之前不允许有空格，之后必须有空格</p>
</li>
<li><p>函数名和 <code>(</code> 之间不允许有空格</p>
</li>
<li><p>单行注释 <code>//</code> 后需要空格（若单行注释和代码同行，则 <code>//</code> 前也需要）</p>
</li>
<li><p>行尾不得有多余的空格</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token operator">!</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 函数</span>
<span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 对象</span>
        a<span class="token punctuation">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><ul>
<li>代码块注释前与代码块后保留一个空行</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 注释</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></code></pre>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><ul>
<li><p>每个语句必须另起一行</p>
</li>
<li><p>变量赋值后需要换行</p>
</li>
<li><p>左大括号 <code>&#123;</code> 后需要换行，右大括号 <code>&#125;</code> 前需要换行</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span>
    c <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li><p>单行注释使用 <code>//</code>，多行注释使用 <code>/* */</code></p>
</li>
<li><p>缩进与下一行代码保持一致</p>
</li>
<li><p>文档 / 接口注释使用以下写法</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/**
 * 文档描述
 * @author 作者
 * @date 创建时间
 * @update 更新者 更新时间
 */</span>

<span class="token comment" spellcheck="true">/**
 * 接口描述
 * @param {String} title - 弹窗标题内容
 * @param {String} cancelBtnText = '默认值' - 取消按钮文本
 * @param {object} obj - 参数 obj 为一个对象
 * @param {String} obj.str - 参数 obj 的 str 属性
 */</span>
<span class="token keyword">function</span> <span class="token punctuation">(</span>title<span class="token punctuation">,</span> cancelBtnText<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p>最外层统一使用单引号 <code>&#39;&#39;</code></p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'&lt;div id="test">&lt;/div>'</span><span class="token punctuation">;</span></code></pre>
<h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><ul>
<li><p>变量在使用前必须通过 <code>var / let / const</code> 定义</p>
</li>
<li><p>不要使用未声明的变量，也不要先使用后声明</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'MyName'</span><span class="token punctuation">;</span></code></pre>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>对象属性名不需要加引号，有特殊字符除外</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token string">'max-weight'</span><span class="token punctuation">:</span> <span class="token number">60</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>
<h2 id="大括号"><a href="#大括号" class="headerlink" title="大括号"></a>大括号</h2><p><code>if / else / for / while / do / switch / try / catch</code> 等关键字后必须有大括号（即使代码块的内容只有一行）</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h2><ul>
<li><p>永远不要直接使用undefined进行变量判断</p>
</li>
<li><p>使用 typeof 和字符串 <code>&#39;undefined&#39;</code> 对变量进行判断</p>
</li>
</ul>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> person <span class="token operator">===</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>person <span class="token operator">===</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p>用 <code>===</code>, <code>!==</code> 代替 <code>==</code>, <code>!=</code></p>
</li>
<li><p>debugger 不要出现在生产环境的代码里</p>
</li>
<li><p>不要在循环内部声明函数</p>
</li>
<li><p>不允许有空的代码块</p>
</li>
<li><p>注释的大段代码 不需要的删除；如果需要请注释说明</p>
</li>
</ul>
<h2 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h2><p>1、<a href="https://guide.aotu.io/docs/">凹凸使用实验室的前端开发规范</a><br>2、<a href="https://github.com/hardylinfee/styleguide">hardylinfee前端开发规范</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>前端-VUE规范</title>
    <url>/posts/e96a41f4.html</url>
    <content><![CDATA[<h2 id="命名分类"><a href="#命名分类" class="headerlink" title="命名分类"></a>命名分类</h2><p>camelCase（驼峰式，也叫小驼峰命名，e.g. userInfo）<br>PascalCase（帕斯卡命名式，也叫大驼峰命名，e.g. UserInfo）<br>kebab-case（短横线连接式，e.g. user-info）<br>snake_case（下划线连接式，e.g. user_info）</p>
<h2 id="标签使用"><a href="#标签使用" class="headerlink" title="标签使用"></a>标签使用</h2><p>除了div ul&gt;li标签外，其他html标签内不能含有任务组件的标签（包括element-ui标签）<br><code>el-row</code> 必须包含<code>el-col</code> 不要单独使用<code>el-col</code></p>
<h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p>使用<code>scss</code>语法 每个<code>.vue</code>文件下的style都必须加上<code>scope</code>属性 </p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style rel<span class="token operator">=</span><span class="token string">"stylesheet/scss"</span> lang<span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></code></pre>
<h2 id="组件建议"><a href="#组件建议" class="headerlink" title="组件建议"></a>组件建议</h2><blockquote>
<ol>
<li>每个 Vue 组件的代码建议不要超出 200 行，如果超出建议拆分组件。  </li>
<li>组件一般情况下是可以拆成基础/ui部分和业务部分，基础组件一般是承载呈现，基础功能，不和业务耦合部分。  </li>
<li>业务组件一般包含业务功能业务特殊数据等等。</li>
</ol>
</blockquote>
<h2 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h2><p>组件文件名除index.vue之外，一律采用PascalCase(<strong>大驼峰</strong>)写法。原因是引入组件时，组件的变量通常用PascalCase格式，以区别于一般变量。组件文件名与变量名一致，方便对应。</p>
<pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> UserBook <span class="token keyword">from</span> <span class="token string">'./user/UserBook'</span></code></pre>
<p>组件名应该始终是多个单词的，根组件 App 除外<br>html元素都是单个单词的（如 <code>&lt;article&gt;</code>,<code>&lt;header&gt;</code>)，为了区分组件和一般html元素，组件由多个单词组成，如<code>BookItem.vue</code>，单独的<code>Book.vue</code>不推荐。</p>
<h2 id="UI组件-基础组件"><a href="#UI组件-基础组件" class="headerlink" title="UI组件/基础组件"></a>UI组件/基础组件</h2><p>开发的时候注意可拓展性，支持数据传参进行渲染，支持插槽slot。<br>设置有mixin，mixin中放了基础信息和方法。</p>
<h2 id="容器组件"><a href="#容器组件" class="headerlink" title="容器组件"></a>容器组件</h2><p>和当前业务耦合性比较高，由多个基础组件组成，可承载当前页的业务接口请求和数据(vuex)。</p>
<h2 id="组件存放位置"><a href="#组件存放位置" class="headerlink" title="组件存放位置"></a>组件存放位置</h2><p>ui组件存放在 src/components/ 中，包含 xxx.vue和 xxmixin.js 和 readme.md。</p>
<h2 id="组件通讯"><a href="#组件通讯" class="headerlink" title="组件通讯"></a>组件通讯</h2><p>避免数据的分发源混乱，不建议使用 eventBus控制数据，应使用 props来和 $emit来数据分发和传送。<br>同级组件的通讯一般会有一个中间容器组件作为桥梁。<br>容器组件作为数据的接受和分发点。</p>
<h2 id="组件的挂载和销毁"><a href="#组件的挂载和销毁" class="headerlink" title="组件的挂载和销毁"></a>组件的挂载和销毁</h2><p>通过v-if控制组件的挂载和销毁</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testcomponent</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>componentActive<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testcomponent</span><span class="token punctuation">></span></span></code></pre>
<p>通过is控制组件的挂载和销毁</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>componentName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">></span></span></code></pre>
<h2 id="Vue文件结构"><a href="#Vue文件结构" class="headerlink" title="Vue文件结构"></a>Vue文件结构</h2><p>顺序：template -&gt; script -&gt; style。一个组件尽量不要超过200行，页面包含独立部分时尽量分离成子组件</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
   <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
      components<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      methods<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 声明语言，并且添加scoped --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token number">...</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>组件/实例的选项顺序</p>
<pre class=" language-md"><code class="language-md">- name          (全局引用)
- components    (模板依赖)
- directives    ...
- filters       ...
- mixins        (组合)
- props         (接口)
- data          (本地状态属性)
- computed      ...
- watch         (响应回调)
- created       (生命周期函数)
- mounted       ...
- methods       (实例属性)</code></pre>
<h2 id="Vue-Router-Path规范"><a href="#Vue-Router-Path规范" class="headerlink" title="Vue Router Path规范"></a>Vue Router Path规范</h2><p>router path采用kebab-case格式。</p>
<blockquote>
<p>用下划线（如：/user_info）或camelCase（如：/userInfo)的单词被当成一个单词，搜索引擎无法区分语义。  </p>
</blockquote>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// bad</span>
<span class="token punctuation">{</span>
   path<span class="token punctuation">:</span> <span class="token string">'/user_info'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// user_info当成一个单词</span>
   name<span class="token punctuation">:</span> <span class="token string">'UserInfo'</span><span class="token punctuation">,</span>
   component<span class="token punctuation">:</span> UserInfo<span class="token punctuation">,</span>
   meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>
   title<span class="token punctuation">:</span> <span class="token string">' - 用户'</span><span class="token punctuation">,</span>
   desc<span class="token punctuation">:</span> <span class="token string">''</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token comment" spellcheck="true">// good</span>
<span class="token punctuation">{</span>
   path<span class="token punctuation">:</span> <span class="token string">'/user-info'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 能解析成user info</span>
   name<span class="token punctuation">:</span> <span class="token string">'UserInfo'</span><span class="token punctuation">,</span>
   component<span class="token punctuation">:</span> UserInfo<span class="token punctuation">,</span>
   meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>
   title<span class="token punctuation">:</span> <span class="token string">' - 用户'</span><span class="token punctuation">,</span>
   desc<span class="token punctuation">:</span> <span class="token string">''</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<h2 id="methods-命名规范"><a href="#methods-命名规范" class="headerlink" title="methods 命名规范"></a>methods 命名规范</h2><p>驼峰式命名，统一使用动词或者动词+名词形式</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//bad</span>
go、nextPage、show、login、get_code

<span class="token comment" spellcheck="true">// good</span>
jumpPage、openCarInfoDialog</code></pre>
<p>请求数据方法，以 data 结尾</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//bad</span>
takeData、confirmData、getList、postForm

<span class="token comment" spellcheck="true">// good</span>
getListData、postFormData</code></pre>
<blockquote>
<p>尽量使用常用单词开头（set、get、go、can、has、is）</p>
</blockquote>
<p><strong>附：</strong> 函数方法常用的动词</p>
<pre class=" language-md"><code class="language-md">get 获取/set 设置,
add 增加/remove 删除
create 创建/destory 移除
start 启动/stop 停止
open 打开/close 关闭,
read 读取/write 写入
load 载入/save 保存,
create 创建/destroy 销毁
begin 开始/end 结束,
backup 备份/restore 恢复
import 导入/export 导出,
split 分割/merge 合并
inject 注入/extract 提取,
attach 附着/detach 脱离
bind 绑定/separate 分离,
view 查看/browse 浏览
edit 编辑/modify 修改,
select 选取/mark 标记
copy 复制/paste 粘贴,
undo 撤销/redo 重做
insert 插入/delete 移除,
add 加入/append 添加
clean 清理/clear 清除,
index 索引/sort 排序
find 查找/search 搜索,
increase 增加/decrease 减少
play 播放/pause 暂停,
launch 启动/run 运行
compile 编译/execute 执行,
debug 调试/trace 跟踪
observe 观察/listen 监听,
build 构建/publish 发布
input 输入/output 输出,
encode 编码/decode 解码
encrypt 加密/decrypt 解密,
compress 压缩/decompress 解压缩
pack 打包/unpack 解包,
parse 解析/emit 生成
connect 连接/disconnect 断开,
send 发送/receive 接收
download 下载/upload 上传,
refresh 刷新/synchronize 同步
update 更新/revert 复原,
lock 锁定/unlock 解锁
check out 签出/check in 签入,
submit 提交/commit 交付
push 推/pull 拉,
expand 展开/collapse 折叠
begin 起始/end 结束,
start 开始/finish 完成
enter 进入/exit 退出,
abort 放弃/quit 离开
obsolete 废弃/depreciate 废旧,
collect 收集/aggregate 聚集</code></pre>
<h2 id="多个属性的html元素规范"><a href="#多个属性的html元素规范" class="headerlink" title="多个属性的html元素规范"></a>多个属性的html元素规范</h2><p>多个特性的元素，占据一行过长时，应该分多行撰写，每个特性一行。(增强更易读)</p>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- bad --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://vuejs.org/images/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Vue Logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fooattribute<span class="token punctuation">"</span></span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barattribute<span class="token punctuation">"</span></span> <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bazattribute<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
   <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://vuejs.org/images/logo.png<span class="token punctuation">"</span></span>
   <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Vue Logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span>
   <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fooattribute<span class="token punctuation">"</span></span>
   <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barattribute<span class="token punctuation">"</span></span>
   <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bazattribute<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre>
<h2 id="指令规范"><a href="#指令规范" class="headerlink" title="指令规范"></a>指令规范</h2><ol>
<li><p>v-for 循环必须加上 key 属性，在整个 for 循环中 key 需要唯一</p>
</li>
<li><p>避免 v-if 和 v-for 同时用在一个元素上（性能问题）<br>出现这样的需求，有两种解决方案：</p>
<ol>
<li>将数据替换为一个计算属性，让其返回过滤后的列表</li>
</ol>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- bad --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user in users<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user.isActive<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      {{ user.name }}
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user in activeUsers<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      {{ user.name }}
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>
   activeUsers<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> user<span class="token punctuation">.</span>isActive
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<ol start="2">
<li>将 v-if 移动至容器元素上 (比如 ul, ol)</li>
</ol>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- bad --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user in users<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shouldShowUsers<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      {{ user.name }}
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shouldShowUsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user in users<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      {{ user.name }}
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>VUE</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo命令使用</title>
    <url>/posts/9dc1a502.html</url>
    <content><![CDATA[<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>你可以执行下列命令来创建一篇新文章。</p>
<pre class=" language-bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span></code></pre>
<p>layout属性有： <code>page</code>（新建页面）、<code>draft</code>(新建草稿)、 <code>post</code>（新建文章）</p>
<p>当你以<code>draft</code>新建文章时生成的文件在_drafts目录下，你可以运行 <code>hexo publish [layout] &lt;title&gt;</code> 文件就会自动移动到_posts文件夹下</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class=" language-bash"><code class="language-bash">$ hexo g <span class="token comment" spellcheck="true">#（generate）生成静态页面</span>
$ hexo s <span class="token comment" spellcheck="true">#（server）运行服务预览页面</span>
$ hexo d <span class="token comment" spellcheck="true">#（deploy）发布页面</span></code></pre>
<h2 id="七牛图片使用"><a href="#七牛图片使用" class="headerlink" title="七牛图片使用"></a>七牛图片使用</h2><img title="七牛云" alt="七牛云" src="http://qiniu.luzhidong.cn/static/images/七牛云.png?imageView2/2/w/450">

<pre class=" language-html"><code class="language-html">{% qnimg demo.png title:图片标题 alt:图片说明 'class:class1 class2' extend:?imageView2/2/w/450 %}
标签最终会网页上自动生成如下格式的代码：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图片标题<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图片说明<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>class1 class2<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://qiniu.luzhidong.cn/static/images/七牛云.png?imageView2/2/w/450<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

在 qnimg 标签中，“title” “alt”和“extend”都是可选的，所以，图片引用完全可以简写成
{% qnimg demo.png %}</code></pre>
<h2 id="七牛高级用法"><a href="#七牛高级用法" class="headerlink" title="七牛高级用法"></a>七牛高级用法</h2><p>上面介绍 qnimg 标签时，示例里面有个 extend 属性，它可以自动为图片引用链后面添加处理参数，在最终显示时，七牛云会自动帮我们处理，详细说明可以参见<a href="https://developer.qiniu.com/dora/manual/3683/img-directions-for-use">七年云图片处理</a>，如下：</p>
<pre class=" language-html"><code class="language-html">?imageView2/2/w/768|watermark/2/text/ICAgICDpsbzlhYjmo64KYmxvZy5hbm5pZXl1LmNvbQ==/fontsize/480/dissolve/32/dx/16/dy/16</code></pre>
<p>上面的参数代码会将图片压缩成宽度为768像素并添加水印(text与fontsize之间的内容就是水印文字的base64编码)。</p>
<blockquote>
<p>如果想对站点博客所有图片做同样的处理，我们没有必要对每个 qnimg 标签都添加同样的 extend 属性，只需要在站点配置文件的 qiniu 配置添<br>添加统一样式后，若想对某个图片显示效果做特殊处理，我们可以在 qnimg 标签里面添加 extend 属性，标签的 extend属性会覆盖配置文件的。</p>
</blockquote>
<p>添加统一样式后，如果某个图片引用想显示原图，我们可以在 qnimg 标签里面添加 normal 属性，如下：</p>
<pre class=" language-html"><code class="language-html">{% qnimg demo.png normal:yes %}</code></pre>
<h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>在使用过程中，细心的读者可以发现， images 目录下所有文件，插件默认都会上传，使用 MAC 的读者，目录下经常会自动生成 “.DS_Store” 文件，如果不做特殊处理，此文件也会上传，为避免插件将无意义的文件自动上传图床，我们可以在站点配置文件的为 qiniu 添加忽略配置，如下：</p>
<pre class=" language-yml"><code class="language-yml">...
ignoring_files:
    - '**/.DS_Store'
...
...</code></pre>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/posts/d0edc1ed.html</url>
    <content><![CDATA[<h2 id="修改文件读写权限"><a href="#修改文件读写权限" class="headerlink" title="修改文件读写权限"></a>修改文件读写权限</h2><p>r： 4（读权限）<br>w： 2（写权限）<br>x： 1（执行权限）<br>chmod 777 文件名</p>
<h2 id="修改文件用户权限"><a href="#修改文件用户权限" class="headerlink" title="修改文件用户权限"></a>修改文件用户权限</h2><p>chown -R 用户 文件名称</p>
<h2 id="修改文件用户组"><a href="#修改文件用户组" class="headerlink" title="修改文件用户组"></a>修改文件用户组</h2><p>chogrp -R 组名 文件名</p>
<h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><p>systemctl 操作名（stop, start, restart） 服务名.service</p>
<h2 id="查询服务"><a href="#查询服务" class="headerlink" title="查询服务"></a>查询服务</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -aux ｜ <span class="token function">grep</span> 服务名</code></pre>
<h2 id="ssh登录服务器"><a href="#ssh登录服务器" class="headerlink" title="ssh登录服务器"></a>ssh登录服务器</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -l root 212.64.101.100</code></pre>
<h2 id="软件安装位置查找"><a href="#软件安装位置查找" class="headerlink" title="软件安装位置查找"></a>软件安装位置查找</h2><pre class=" language-bash"><code class="language-bash">mdfind -name 文件名</code></pre>
<h2 id="npm-常用命名"><a href="#npm-常用命名" class="headerlink" title="npm 常用命名"></a>npm 常用命名</h2><ol>
<li>查询可用升级的包 <code>npm outdated</code></li>
<li>更新包 <code>npm update</code></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs配置</title>
    <url>/posts/b01f8ed2.html</url>
    <content><![CDATA[<h2 id="node全局文件夹配置"><a href="#node全局文件夹配置" class="headerlink" title="node全局文件夹配置"></a>node全局文件夹配置</h2><p>我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\Develop\nodejs】下创建两个文件夹【node_global】及【node_cache】</p>
<p>创建完两个空文件夹之后，打开cmd命令窗口，输入</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix D:\DevelopeTool\node-v8.11.3\node_global
<span class="token function">npm</span> config <span class="token keyword">set</span> cache D:\DevelopeTool\node-v8.11.3\node_cache</code></pre>
<p>接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”</p>
<p>进入环境变量对话框，在【系统变量】下新建【NODE_PATH】，<br>输入【D:\Develop\nodejs\node_global\node_modules】，<br>将【用户变量】下的【Path】修改为【D:\Develop\nodejs\node_global】</p>
<p>淘宝 NPM 镜像</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org</code></pre>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法</title>
    <url>/posts/3c50d03d.html</url>
    <content><![CDATA[<h2 id="table语法"><a href="#table语法" class="headerlink" title="table语法"></a>table语法</h2><pre class=" language-markdown"><code class="language-markdown">| Tables   |      Are      |  Cool |
|----------|:-------------:|------:|
| col 1 is |  left-aligned | $1600 |
| col 2 is |    centered   |   $12 |
| col 3 is | right-aligned |    $1 |</code></pre>
<p>tips:<br><code>:-------------:</code>居中<br><code>-------------</code>左对齐<br><code>-----:</code>右对齐<br><code>-</code>至少有一个,否则默认左对齐;例如<code>::</code></p>
<h2 id="Markdwon语法高亮"><a href="#Markdwon语法高亮" class="headerlink" title="Markdwon语法高亮"></a>Markdwon语法高亮</h2><table>
<thead>
<tr>
<th>language</th>
<th align="left">key</th>
</tr>
</thead>
<tbody><tr>
<td>C</td>
<td align="left">c</td>
</tr>
<tr>
<td>ActionScript</td>
<td align="left">actionscript</td>
</tr>
<tr>
<td>Apache</td>
<td align="left">apache</td>
</tr>
<tr>
<td>AppleScript</td>
<td align="left">applescript</td>
</tr>
<tr>
<td>AsciiDoc</td>
<td align="left">asciidoc</td>
</tr>
<tr>
<td>AspectJ</td>
<td align="left">asciidoc</td>
</tr>
<tr>
<td>AutoHotkey</td>
<td align="left">autohotkey</td>
</tr>
<tr>
<td>AVR Assembler</td>
<td align="left">avrasm</td>
</tr>
<tr>
<td>Axapta</td>
<td align="left">axapta</td>
</tr>
<tr>
<td>Bash</td>
<td align="left">bash</td>
</tr>
<tr>
<td>BrainFuck</td>
<td align="left">brainfuck</td>
</tr>
<tr>
<td>Cap’n Proto</td>
<td align="left">capnproto</td>
</tr>
<tr>
<td>Clojure REPL</td>
<td align="left">clojure</td>
</tr>
<tr>
<td>Clojure</td>
<td align="left">clojure</td>
</tr>
<tr>
<td>CMake</td>
<td align="left">cmake</td>
</tr>
<tr>
<td>CoffeeScript</td>
<td align="left">coffeescript</td>
</tr>
<tr>
<td>C++</td>
<td align="left">cpp</td>
</tr>
<tr>
<td>C#</td>
<td align="left">cs</td>
</tr>
<tr>
<td>CSS</td>
<td align="left">css</td>
</tr>
<tr>
<td>D</td>
<td align="left">d</td>
</tr>
<tr>
<td>Dart</td>
<td align="left">d</td>
</tr>
<tr>
<td>Delphi</td>
<td align="left">delphi</td>
</tr>
<tr>
<td>Diff</td>
<td align="left">diff</td>
</tr>
<tr>
<td>Django</td>
<td align="left">django</td>
</tr>
<tr>
<td>DOS.bat</td>
<td align="left">dos</td>
</tr>
<tr>
<td>Dust</td>
<td align="left">dust</td>
</tr>
<tr>
<td>Elixir</td>
<td align="left">elixir</td>
</tr>
<tr>
<td>ERB(Embedded Ruby)</td>
<td align="left">erb</td>
</tr>
<tr>
<td>Erlang REPL</td>
<td align="left">erlang-repl</td>
</tr>
<tr>
<td>Erlang</td>
<td align="left">erlang</td>
</tr>
<tr>
<td>FIX</td>
<td align="left">fix</td>
</tr>
<tr>
<td>F#</td>
<td align="left">fsharp</td>
</tr>
<tr>
<td>G-code(ISO 6983)</td>
<td align="left">gcode</td>
</tr>
<tr>
<td>Gherkin</td>
<td align="left">gherkin</td>
</tr>
<tr>
<td>GLSL</td>
<td align="left">glsl</td>
</tr>
<tr>
<td>Go</td>
<td align="left">go</td>
</tr>
<tr>
<td>Gradle</td>
<td align="left">gradle</td>
</tr>
<tr>
<td>Groovy</td>
<td align="left">groovy</td>
</tr>
<tr>
<td>Haml</td>
<td align="left">haml</td>
</tr>
<tr>
<td>Handlebars</td>
<td align="left">handlebars</td>
</tr>
<tr>
<td>Haskell</td>
<td align="left">haskell</td>
</tr>
<tr>
<td>Haxe</td>
<td align="left">haxe</td>
</tr>
<tr>
<td>HTML</td>
<td align="left">html</td>
</tr>
<tr>
<td>HTTP</td>
<td align="left">http</td>
</tr>
<tr>
<td>Ini file</td>
<td align="left">ini</td>
</tr>
<tr>
<td>Java</td>
<td align="left">java</td>
</tr>
<tr>
<td>JavaScript</td>
<td align="left">javascript</td>
</tr>
<tr>
<td>JSON</td>
<td align="left">json</td>
</tr>
<tr>
<td>Lasso</td>
<td align="left">lasso</td>
</tr>
<tr>
<td>Less</td>
<td align="left">less</td>
</tr>
<tr>
<td>Lisp</td>
<td align="left">lisp</td>
</tr>
<tr>
<td>LiveCode</td>
<td align="left">livecodeserver</td>
</tr>
<tr>
<td>LiveScript</td>
<td align="left">livescript</td>
</tr>
<tr>
<td>Lua</td>
<td align="left">lua</td>
</tr>
<tr>
<td>Makefile</td>
<td align="left">makefile</td>
</tr>
<tr>
<td>Markdown</td>
<td align="left">markdown</td>
</tr>
<tr>
<td>Mathematica</td>
<td align="left">mathematica</td>
</tr>
<tr>
<td>Matlab</td>
<td align="left">matlab</td>
</tr>
<tr>
<td>MEL (Maya Embedded Language)</td>
<td align="left">mel</td>
</tr>
<tr>
<td>Mercury</td>
<td align="left">mercury</td>
</tr>
<tr>
<td>Mizar</td>
<td align="left">mizar</td>
</tr>
<tr>
<td>Monkey</td>
<td align="left">monkey</td>
</tr>
<tr>
<td>Nginx</td>
<td align="left">nginx</td>
</tr>
<tr>
<td>Nimrod</td>
<td align="left">nimrod</td>
</tr>
<tr>
<td>Nix</td>
<td align="left">nix</td>
</tr>
<tr>
<td>NSIS</td>
<td align="left">nsis</td>
</tr>
<tr>
<td>Objective C</td>
<td align="left">objectivec</td>
</tr>
<tr>
<td>OCaml</td>
<td align="left">ocaml</td>
</tr>
<tr>
<td>Oxygene</td>
<td align="left">oxygene</td>
</tr>
<tr>
<td>Parser 3</td>
<td align="left">parser3</td>
</tr>
<tr>
<td>Perl</td>
<td align="left">perl</td>
</tr>
<tr>
<td>PHP</td>
<td align="left">php</td>
</tr>
<tr>
<td>PowerShell</td>
<td align="left">powershell</td>
</tr>
<tr>
<td>Processing</td>
<td align="left">processing</td>
</tr>
<tr>
<td>Python’s profiler output</td>
<td align="left">profile</td>
</tr>
<tr>
<td>Protocol Buffers</td>
<td align="left">protobuf</td>
</tr>
<tr>
<td>Puppet</td>
<td align="left">puppet</td>
</tr>
<tr>
<td>Python</td>
<td align="left">python</td>
</tr>
<tr>
<td>Q</td>
<td align="left">q</td>
</tr>
<tr>
<td>R</td>
<td align="left">r</td>
</tr>
<tr>
<td>RenderMan RIB</td>
<td align="left">rib</td>
</tr>
<tr>
<td>Roboconf</td>
<td align="left">roboconf</td>
</tr>
<tr>
<td>RenderMan RSL</td>
<td align="left">rsl</td>
</tr>
<tr>
<td>Ruby</td>
<td align="left">ruby</td>
</tr>
<tr>
<td>Oracle Rules Language</td>
<td align="left">ruleslanguage</td>
</tr>
<tr>
<td>Rust</td>
<td align="left">rust</td>
</tr>
<tr>
<td>Scala</td>
<td align="left">scala</td>
</tr>
<tr>
<td>Scheme</td>
<td align="left">scheme</td>
</tr>
<tr>
<td>Scilab</td>
<td align="left">scilab</td>
</tr>
<tr>
<td>SCSS</td>
<td align="left">scss</td>
</tr>
<tr>
<td>Smali</td>
<td align="left">smali</td>
</tr>
<tr>
<td>SmallTalk</td>
<td align="left">smalltalk</td>
</tr>
<tr>
<td>SML</td>
<td align="left">sml</td>
</tr>
<tr>
<td>SQL</td>
<td align="left">sql</td>
</tr>
<tr>
<td>Stata</td>
<td align="left">stata</td>
</tr>
<tr>
<td>STEP Part21(ISO 10303-21)</td>
<td align="left">step21</td>
</tr>
<tr>
<td>Stylus</td>
<td align="left">stylus</td>
</tr>
<tr>
<td>Swift</td>
<td align="left">swift</td>
</tr>
<tr>
<td>Tcl</td>
<td align="left">tcl</td>
</tr>
<tr>
<td>Tex</td>
<td align="left">tex</td>
</tr>
<tr>
<td>text</td>
<td align="left">text/plain</td>
</tr>
<tr>
<td>Thrift</td>
<td align="left">thrift</td>
</tr>
<tr>
<td>Twig</td>
<td align="left">twig</td>
</tr>
<tr>
<td>TypeScript</td>
<td align="left">typescript</td>
</tr>
<tr>
<td>Vala</td>
<td align="left">vala</td>
</tr>
<tr>
<td>VB.NET</td>
<td align="left">vbnet</td>
</tr>
<tr>
<td>VBScript in HTML</td>
<td align="left">vbscript-html</td>
</tr>
<tr>
<td>VBScript</td>
<td align="left">vbscript</td>
</tr>
<tr>
<td>Verilog</td>
<td align="left">verilog</td>
</tr>
<tr>
<td>VHDL</td>
<td align="left">vhdl</td>
</tr>
<tr>
<td>Vim Script</td>
<td align="left">vim</td>
</tr>
<tr>
<td>Intel x86 Assembly</td>
<td align="left">x86asm</td>
</tr>
<tr>
<td>XL</td>
<td align="left">xl</td>
</tr>
<tr>
<td>XML</td>
<td align="left">xml</td>
</tr>
<tr>
<td>YAML</td>
<td align="left">yml</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>VUE自定义过滤器和指令</title>
    <url>/posts/a6e58f56.html</url>
    <content><![CDATA[<h2 id="自定义过滤器（filters）"><a href="#自定义过滤器（filters）" class="headerlink" title="自定义过滤器（filters）"></a>自定义过滤器（filters）</h2><p>1、过滤器可以串联：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token operator">|</span> filterA <span class="token operator">|</span> filterB <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>
<p>在这个例子中，<code>filterA</code>被定义为接收单个参数的过滤器函数，表达式<code>message</code>的值将作为参数传入到函数中。然后继续调用同样被定义为接收单个参数的过滤器函数<code>filterB</code>，将<code>filterA</code>的结果传递到<code>filterB</code>中。</p>
<p>2、过滤器是 JavaScript 函数，因此可以接收参数：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token operator">|</span> <span class="token function">filterA</span><span class="token punctuation">(</span><span class="token string">'arg1'</span><span class="token punctuation">,</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>
<p>这里，<code>filterA</code>被定义为接收三个参数的过滤器函数。其中<code>message</code>的值作为第一个参数，普通字符串<code>arg1</code>作为第二个参数，表达式<code>arg2</code>的值作为第三个参数。</p>
<p>3、全局过滤器定义<br>在main.js 里引入使用如下：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> filters <span class="token keyword">from</span> <span class="token string">'./filters'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// global filters</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> filters<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="自定义指令的创建和使用（directives）"><a href="#自定义指令的创建和使用（directives）" class="headerlink" title="自定义指令的创建和使用（directives）"></a>自定义指令的创建和使用（directives）</h2><p>1、钩子函数：将作用域与DOM进行链接，链接函数用来创建可以操作DOM的指令</p>
<blockquote>
<p>bind - 只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置<br>update - 在bind之后立即以初始值为参数第一次调用，之后绑定值变化的时候，参数为新值与旧值<br>unbind - 只调用一次，在指令从元素上解绑的时候调用</p>
</blockquote>
<p>2、每个钩子都有<code>el</code>, <code>binding</code>, 和<code>vnode</code>参数可用. <code>update</code>和<code>componentUpdated</code>钩子还暴露了<code>oldVnode</code>, 以区分传递的旧值和较新的值</p>
<p>3、钩子的执行情况</p>
<blockquote>
<p>a、页面加载时：bind inserted<br>b、更新组件：update componentUpdated<br>c、卸载组件：unbind<br>d、重新安装组件：bind inserted</p>
</blockquote>
<p>注意区别：bind与inserted：bind时父节点为null，inserted时父节点存在；update与componentUpdated：update是数据更新前，componentUpdated是数据更新后。</p>
<p>4、指令的使用</p>
<pre class=" language-javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    bind<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'bind'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    inserted<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'inserted'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    update<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'update'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    componentUpdated<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'componentUpdated'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    unbind<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'unbind'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>5、钩子函数参数</p>
<ul>
<li>指令钩子函数会被传入以下参数：</li>
<li>el：指令所绑定的元素，可以用来直接操作 DOM 。</li>
<li>binding：一个对象，包含以下属性：<ul>
<li>name：指令名，不包括 v- 前缀。</li>
<li>value：指令的绑定值，例如：v-my-directive=”1 + 1” 中，绑定值为 2。</li>
<li>oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li>
<li>expression：字符串形式的指令表达式。例如 v-my-directive=”1 + 1” 中，表达式为 “1 + 1”。</li>
<li>arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 “foo”。</li>
<li>modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li>
</ul>
</li>
<li>vnode：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。</li>
<li>oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li>
</ul>
<p>6、全局指令定义<br>在main.js 里引入使用如下：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> directives <span class="token keyword">from</span> <span class="token string">'./directive'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// global directives</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>directives<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> directives<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://cn.vuejs.org/v2/guide/custom-directive.html">vue官方文档-自定义指令</a><br><a href="https://cn.vuejs.org/v2/guide/filters.html">vue官方文档-过滤器</a></p>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>重学前端</title>
    <url>/posts/c421a65c.html</url>
    <content><![CDATA[<h2 id="0-1-0-2为什么不等于0-3"><a href="#0-1-0-2为什么不等于0-3" class="headerlink" title="0.1+0.2为什么不等于0.3"></a>0.1+0.2为什么不等于0.3</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 比较大小使用下面的方式</span>
<span class="token number">0.1</span><span class="token operator">+</span><span class="token number">0.2</span><span class="token operator">-</span><span class="token number">0.3</span> <span class="token operator">&lt;=</span> Number<span class="token punctuation">.</span>EPSILON</code></pre>
<h2 id="我怎么去区分对象，数组和null呢"><a href="#我怎么去区分对象，数组和null呢" class="headerlink" title="我怎么去区分对象，数组和null呢?"></a>我怎么去区分对象，数组和null呢?</h2><pre class=" language-javascript"><code class="language-javascript">Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// console "[object Null]"</span></code></pre>
<p>一个小练习：我们现在要实现一个红绿灯，把一个圆形 div 按照绿色 3 秒，黄色 1 秒，红色 2 秒循环改变背景色，你会怎样编写这个代码呢？</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>vue常用命令和填坑技巧</title>
    <url>/posts/bcb373c9.html</url>
    <content><![CDATA[<ul>
<li><p>阻止事件冒泡<br>@click.stop</p>
</li>
<li><p>阻止默认事件<br>@contextmenu.prevent </p>
</li>
<li><p>模板:</p>
<pre class=" language-html"><code class="language-html">{{msg}}        数据更新模板变化
{{*msg}}    数据只绑定一次
{{{msg}}}    HTML转意输出</code></pre>
</li>
<li><p>用户会看到花括号标记:</p>
<pre class=" language-html"><code class="language-html">v-cloak        防止闪烁, 比较大段落
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        ->   v-text
{{{msg}}}            ->   v-html</code></pre>
</li>
<li><p>Vue.nextTick( [callback, context] )</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 修改数据</span>
vm<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'Hello'</span>
<span class="token comment" spellcheck="true">// DOM 还没有更新</span>
Vue<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">// DOM 更新了</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
</li>
</ul>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信视频全屏方案</title>
    <url>/posts/7455f6fa.html</url>
    <content><![CDATA[<h2 id="微信视频播放全屏问题"><a href="#微信视频播放全屏问题" class="headerlink" title="微信视频播放全屏问题"></a>微信视频播放全屏问题</h2><p>   在ios和安卓手机里的微信下播放视频时，会遇到不少问题，例如需要手动点击，视频才会播放，并且视频会跳出微信框，出现控制条，如果视频不是腾讯视频，播放完毕会出现腾讯视频的广告推送，今天我们就来看一下如何规避这些问题。</p>
<p>解决办法：给video标签加一些属性，调用h5原生video。<br>下面是我写的一个小例子的html核心部分：</p>
<pre class=" language-html"><code class="language-html">&lt;video
  id="videoALL" 
  src="video/01.mp4" 
  poster="images/1.jpg" /*视频封面*/
  preload="auto" 
  webkit-playsinline="true" /*这个属性是ios 10中设置可以让视频在小窗内播放，也就是不是全屏播放*/  
  playsinline="true"  /*IOS微信浏览器支持小窗内播放*/ 
  x-webkit-airplay="allow" 
  x5-video-player-type="h5"  /*启用H5播放器,是wechat安卓版特性*/
  x5-video-player-fullscreen="true" /*全屏设置，设置为 true 是防止横屏*/
  x5-video-orientation="portraint" /*播放器支付的方向，andscape横屏，portraint竖屏，默认值为竖屏*/
  style="object-fit:fill">
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre>
<p>下面我们来看看这些属性的作用：</p>
<ul>
<li><p>poster=”images/1.jpg”:属性规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。</p>
</li>
<li><p>preload=”auto” ：属性规定在页面加载后载入视频。</p>
</li>
<li><p>webkit-playsinline和playsinline：视频播放时局域播放，不脱离文档流 。但是这个属性比较特别， 需要嵌入网页的APP比如WeChat中UIwebview 的allowsInlineMediaPlayback = YES webview.allowsInlineMediaPlayback = YES，才能生效。换句话说，如果APP不设置，你页面中加了这标签也无效，这也就是为什么安卓手机WeChat 播放视频总是全屏，因为APP不支持playsinline，而ISO的WeChat却支持。</p>
</li>
<li><p>这里就要补充下，如果是想做全屏直播或者全屏H5体验的用户，ISO需要设置删除 webkit-playsinline 标签，因为你设置 false 是不支持的 ，安卓则不需要，因为默认全屏。但这时候全屏是有播放控件的，无论你有没有设置control。 做直播的可能用得着播放控件，但是全屏H5是不需要的，那么去除全屏播放时候的控件，需要以下设置：同层播放。</p>
</li>
<li><p>x-webkit-airplay=”allow”暂时无法确切的知道其作用，但是小编猜测，这个属性应该是使此视频支持ios的AirPlay功能。使用AirPlay可以直接从使用iOS的设备上的不同位置播放视频、音乐还有照片文件，也就是说通过AirPlay功能可以实现影音文件的无线播放，当然前提是播放的终端设备也要支持相应的功能。</p>
</li>
<li><p>x5-video-player-type：启用同层H5播放器，就是在视频全屏的时候，div可以呈现在视频层上，也是WeChat安卓版特有的属性。同层播放别名也叫做沉浸式播放，播放的时候看似全屏，但是已经除去了control和微信的导航栏，只留下”X”和”&lt;”两键。目前的同层播放器只在Android（包括微信）上生效，暂时不支持iOS。至于为什么同层播放只对安卓开放，是因为安卓不能像ISO一样局域播放，默认的全屏会使得一些界面操作被阻拦，如果是全屏H5还好，但是做直播的话，诸如弹幕那样的功能就无法实现了，所以这时候同层播放的概念就解决了这个问题。不过在测试的过程中发现，不同版本的ISO和安卓效果略有不同。</p>
</li>
<li><p>x5-video-orientation：声明播放器支持的方向，可选值landscape 横屏, portraint竖屏。默认值portraint。无论是直播还是全屏H5一般都是竖屏播放，但是这个属性需要x5-video-player-type开启H5模式</p>
</li>
<li><p>x5­-video­-player­-fullscreen：全屏设置。它又两个属性值，ture和false，true支持全屏播放，false不支持全屏播放。<br>其实，ISO 微信浏览器是Chrome的内核，相关的属性都支持，也是为什么X5同层播放不支持的原因。安卓微信浏览器是X5内核，一些属性标签比如playsinline就不支持，所以始终全屏。</p>
</li>
<li><p>还有个问题，在Android的微信里面，就算加上了上面的属性，还会出现上下有黑边，不能全屏的问题。<br>解决办法：给video加上object-fit: fill;的style属性。如果还是有黑边有可能是视频尺寸不合适。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>微信</category>
      </categories>
      <tags>
        <tag>微信公众号</tag>
      </tags>
  </entry>
  <entry>
    <title>开发遇到的一些坑记录</title>
    <url>/posts/f48d2384.html</url>
    <content><![CDATA[<h2 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h2><ol>
<li><p>textarea 不跟随页面滚动问题，问题是<code>textarea</code>的某一层父标签样式加了<code>overflow</code>css属性；去掉这个属性后就可以了</p>
</li>
<li><p>设计的页面如果有textarea应该尽量避页面出现滚动条</p>
</li>
<li><p>如果一定要滚动页面，那…就找解决办法吧<br> 解决办法：我这里的使用的办法是用<code>text</code>和<code>textarea</code>做隐藏和显示切换，当我们点击text时显示textarea，失去焦点时显示text，这样就可以临时解决问题，但还不是很完美（当你需要自动获取焦点时，需要点击两次才能自动获取焦点），如果大家有完美的解决方案希望您能在下方评论留言。</p>
</li>
<li><p>使用小程序下拉刷新，页面外层布局不能使用flex布局</p>
</li>
<li><p>小程序textarea安卓和iOS显示不一样<br> 解决办法：判断手机是否是iPhone，通过样式的方式解决</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 判断手机型号</span>
wx<span class="token punctuation">.</span><span class="token function">getSystemInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    success<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>system<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"iOS"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            that<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>isIphone <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'iPhone X'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> res<span class="token punctuation">.</span>model <span class="token operator">==</span> <span class="token string">'iPhone X'</span> <span class="token operator">||</span> res<span class="token punctuation">.</span>model <span class="token operator">==</span> <span class="token string">'iphonrx'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            that<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>isIphoneX <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.ds-textarea</span> <span class="token class">.textarea</span> </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.ds-textarea</span> <span class="token class">.textarea.iphone</span> </span><span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">14</span>rpx<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">14</span>rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
</li>
</ol>
<h2 id="百度地图"><a href="#百度地图" class="headerlink" title="百度地图"></a>百度地图</h2><ol>
<li>地图上 <code>marker</code> 和 <code>circle</code> 同时存在时，使用打点功能 <code>marker</code>  会错位<br>解决办法：<pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">setMark</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>
 <span class="token keyword">var</span> e <span class="token operator">=</span> e<span class="token operator">||</span>window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>
 <span class="token keyword">var</span> b <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">pixelToPoint</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Pixel</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>e<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//屏幕坐标转换为</span>
 <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
 map<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">drawcircle</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
</li>
</ol>
<h2 id="浏览解析问题"><a href="#浏览解析问题" class="headerlink" title="浏览解析问题"></a>浏览解析问题</h2><ol>
<li>文件有中文名和特殊符号是显示404问题，可通过转码解决问题 encodeURIComponent(fileName);</li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>前端插件集合收藏</title>
    <url>/posts/8f9b49f0.html</url>
    <content><![CDATA[<h2 id="vue图片剪栽组件"><a href="#vue图片剪栽组件" class="headerlink" title="vue图片剪栽组件"></a><a href="https://github.com/xyxiao001/vue-cropper">vue图片剪栽组件</a></h2><img src="http://qiniu.luzhidong.cn/static/images/011.png">

<h2 id="Web酷炫特效"><a href="#Web酷炫特效" class="headerlink" title="Web酷炫特效"></a><a href="http://gnipbao.github.io/h5-test/menu.html">Web酷炫特效</a></h2><img src="http://qiniu.luzhidong.cn/static/images/005.png">

<h2 id="Web酷炫特效2"><a href="#Web酷炫特效2" class="headerlink" title="Web酷炫特效2"></a><a href="https://gnipbao.github.io/h5-test/3dtag.html">Web酷炫特效2</a></h2><img src="http://qiniu.luzhidong.cn/static/images/006.gif">

<h2 id="15个vue开发必不可少的指令"><a href="#15个vue开发必不可少的指令" class="headerlink" title="15个vue开发必不可少的指令"></a><a href="https://www.telerik.com/amp/15-must-have-vue-directives-that-will-significantly-maximize-your-productivity/WEx1ZE1sRUVUWkE5S0dNbEhBNXJyUkU3T1Q4PQ2?utm_campaign=Vue.js%20News&utm_medium=email&utm_source=Revue%20newsletter">15个vue开发必不可少的指令</a></h2><img src="http://qiniu.luzhidong.cn/static/images/009.png">

<h2 id="数字之间的动画切换动效"><a href="#数字之间的动画切换动效" class="headerlink" title="数字之间的动画切换动效"></a><a href="https://dakerhub.github.io/vue-digital-transform/">数字之间的动画切换动效</a></h2><img src="http://qiniu.luzhidong.cn/static/images/008.gif">

<h2 id="功能十分强大打字机插件"><a href="#功能十分强大打字机插件" class="headerlink" title="功能十分强大打字机插件"></a><a href="https://github.com/pengqiangsheng/easy-typer-js">功能十分强大打字机插件</a></h2><img src="http://qiniu.luzhidong.cn/static/images/007.gif">

<h2 id="按钮点击效果样式集合"><a href="#按钮点击效果样式集合" class="headerlink" title="按钮点击效果样式集合"></a><a href="https://github.com/jolaleye/cssfx">按钮点击效果样式集合</a></h2><img src="http://qiniu.luzhidong.cn/static/images/010.gif">

<h2 id="视频播放插件"><a href="#视频播放插件" class="headerlink" title="视频播放插件"></a><a href="http://h5player.bytedance.com/api/#%E5%B1%9E%E6%80%A7">视频播放插件</a></h2><img src="http://qiniu.luzhidong.cn/static/images/012.png">

<h2 id="数字键盘"><a href="#数字键盘" class="headerlink" title="数字键盘"></a><a href="https://github.com/viclm/numeric-keyboard">数字键盘</a></h2><img src="http://qiniu.luzhidong.cn/static/images/013.gif">

<h2 id="Vue-DEMO利器-在线运行-amp-编辑-Vue-单文件"><a href="#Vue-DEMO利器-在线运行-amp-编辑-Vue-单文件" class="headerlink" title="Vue DEMO利器, 在线运行 &amp; 编辑 Vue 单文件"></a><a href="https://github.com/dream2023/vue-run-sfc">Vue DEMO利器, 在线运行 &amp; 编辑 Vue 单文件</a></h2><img src="http://qiniu.luzhidong.cn/static/images/014.gif">

<h2 id="微信小程序开发资源汇总"><a href="#微信小程序开发资源汇总" class="headerlink" title="微信小程序开发资源汇总"></a><a href="https://github.com/justjavac/awesome-wechat-weapp">微信小程序开发资源汇总</a></h2><img src="http://qiniu.luzhidong.cn/static/images/015.png">
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>前端-HTML规范</title>
    <url>/posts/934ef266.html</url>
    <content><![CDATA[<h2 id="class、id命名规则"><a href="#class、id命名规则" class="headerlink" title="class、id命名规则"></a>class、id命名规则</h2><ul>
<li><p>class 不能使用驼峰 使用(烤串写法) 例子：class=”login-dialog”  class=”login-form-dialog”  </p>
<ul>
<li>命名建议：页面-属性-功能</li>
<li>公用类 修饰符-功能</li>
</ul>
</li>
<li><p>id 一般参与样式，命名的话使用驼峰。</p>
</li>
</ul>
<h2 id="标签使用"><a href="#标签使用" class="headerlink" title="标签使用"></a>标签使用</h2><ul>
<li>内联元素内不能有块级元素</li>
<li>标签里面的样式超过2个需要提出来</li>
</ul>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ul>
<li><p>使用 <code>4</code> 个空格做为一个缩进层级，不允许使用 <code>2</code></p>
</li>
<li><p>在属性上，使用双引号 <code>&quot;&quot;</code>，不要使用单引号 <code>&#39;&#39;</code></p>
</li>
<li><p>属性名 / 属性值全小写，用中划线 <code>-</code> 做分隔符</p>
</li>
<li><p>不要忽略可选的关闭标签，例：<code>&lt;/li&gt;</code> 和 <code>&lt;/body&gt;</code></p>
</li>
</ul>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first-child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>first<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre>
<h2 id="HTML5-doctype"><a href="#HTML5-doctype" class="headerlink" title="HTML5 doctype"></a>HTML5 doctype</h2><p>在页面开头使用这个简单的 doctype 来启用标准模式，使其在每个浏览器中尽可能一致的展现</p>
<p>虽然 doctype 不区分大小写，但是按照惯例，doctype 使用全大写</p>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token doctype">&lt;!DOCTYPE html></span></code></pre>
<h2 id="lang-属性"><a href="#lang-属性" class="headerlink" title="lang 属性"></a>lang 属性</h2><p>根据HTML5规范：</p>
<blockquote>
<p>应在 html 标签上加上 lang 属性。这会给语音工具和翻译工具帮助，告诉它们应当怎么去发音和翻译。</p>
</blockquote>
<p>在 sitepoint 上可以查到 <a href="https://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/">语言列表</a></p>
<p>但 sitepoint 只是给出了语言的大类，例如中文只给出了 zh，但是没有区分香港，台湾，大陆。而微软给出了一份更加详细的 <a href="https://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx">语言列表</a>，其中细分了 zh-cn, zh-hk, zh-tw</p>
<pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh-cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<h2 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h2><p>通过声明一个明确的字符编码，让浏览器轻松、快速的确定适合网页内容的渲染方式，通常指定为 “utf-8”</p>
<pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<h2 id="IE-兼容模式"><a href="#IE-兼容模式" class="headerlink" title="IE 兼容模式"></a>IE 兼容模式</h2><p>用 <code>&lt;meta&gt;</code> 标签可以指定页面应该用什么版本的 IE 来渲染，PC 端项目，建议启用 IE Edge 模式</p>
<pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 极速模式 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>webkit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- IE兼容 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>Edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<h2 id="引入-CSS、JS"><a href="#引入-CSS、JS" class="headerlink" title="引入 CSS、JS"></a>引入 CSS、JS</h2><ul>
<li><p>根据 HTML5 规范, 通常在引入 CSS 和 JS 时不需要指明 <code>type</code>，因为 <code>text/css</code> 和 <code>text/javascript</code> 分别是他们的默认值</p>
</li>
<li><p>在引入 CSS 时，必须指明 <code>rel=&quot;stylesheet&quot;</code></p>
</li>
<li><p>将 script 放在页面中间将阻断页面的渲染，出于性能方面的考虑，如非必要，JavaScript 应当放在页面末尾</p>
</li>
</ul>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<h2 id="boolean-属性"><a href="#boolean-属性" class="headerlink" title="boolean 属性"></a>boolean 属性</h2><p>boolean 属性指不需要声明取值的属性，XHTML 需要每个属性声明取值，但是 HTML5 并不需要</p>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- bad --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>
<h2 id="减少标签数量"><a href="#减少标签数量" class="headerlink" title="减少标签数量"></a>减少标签数量</h2><p>在编写HTML代码时，需要尽量避免多余的父节点</p>
<pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- good --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- bad --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre>
<h2 id="实用高于完美"><a href="#实用高于完美" class="headerlink" title="实用高于完美"></a>实用高于完美</h2><ul>
<li><p>尽量遵循 HTML 标准和语义，但是不应该以浪费实用性作为代价</p>
</li>
<li><p>任何时候都要用尽量小的复杂度和尽量少的标签来解决问题</p>
</li>
</ul>
<h2 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h2><p>1、<a href="https://guide.aotu.io/docs/">凹凸使用实验室的前端开发规范</a><br>2、<a href="https://github.com/hardylinfee/styleguide">hardylinfee前端开发规范</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>vsCode-PHP环境配置-windows</title>
    <url>/posts/7de543a2.html</url>
    <content><![CDATA[<h2 id="安装Wampserver"><a href="#安装Wampserver" class="headerlink" title="安装Wampserver"></a>安装Wampserver</h2><ol>
<li><p>Wampserver<a href="https://sourceforge.net/projects/wampserver/">点击下载</a>集成了Apache、mysql、php(多个版本的)等环境  </p>
<img src="http://qiniu.luzhidong.cn/static/images/016.jpg">
</li>
<li><p>安装Wampserver，直接下一步就可以了 </p>
<img src="http://qiniu.luzhidong.cn/static/images/021.jpg">  
<p>这里可以选择要安装的应用，下面的是我选择，因为我本地已经安装了mysql所以我没有勾选mysql，如果你没有安装的话建议你勾选上mysql5.7，然后直接下一步就可以了   </p>
<img src="http://qiniu.luzhidong.cn/static/images/022.jpg">  


</li>
</ol>
<ol start="3">
<li><p>安装完成后，直接打开Wampserver, 任务栏的图标由红变绿说明已经启动成功，鼠标右键打开下图可以看到Apache启动的服务默认监听端口是80端口，如果你发现没启动成功很有可能就是你的电脑80端口已经被占用  </p>
<img src="http://qiniu.luzhidong.cn/static/images/017.jpg">
<p>浏览器直接输入localhost，看到下图说明已经安装并启动成功了  </p>
<img src="http://qiniu.luzhidong.cn/static/images/020.jpg">
</li>
<li><p>如果你的端口被占用可以这样修改，指着Wampserver图标点击鼠标左键可以看到下图  </p>
<img src="http://qiniu.luzhidong.cn/static/images/018.png">  
<img src="http://qiniu.luzhidong.cn/static/images/019.jpg"></li>
</ol>
<p><strong>注：修改完后重新启动服务，浏览器打开localhost:8089看是否能访问</strong></p>
<p>到这里Wampserver就安装完了</p>
<h2 id="Wampserver配置PHP环境"><a href="#Wampserver配置PHP环境" class="headerlink" title="Wampserver配置PHP环境"></a>Wampserver配置PHP环境</h2><ol>
<li>这里我用这个php项目做测试<a href="https://github.com/crmeb/CRMEB">CRMEB</a>，我们先把项目clone下来，把项目复制复制到www目录<br>怎么知道www目录在哪呢，看下图直接点击就可以进入该目录  <img src="http://qiniu.luzhidong.cn/static/images/023.jpg">  

</li>
</ol>
<p>复制的项目的目录结构如下  </p>
<img src="http://qiniu.luzhidong.cn/static/images/024.jpg">  

<p>到这里已经成功一半的，下一步吧Apache默认打开目录指定到这个项目目录 </p>
<img src="http://qiniu.luzhidong.cn/static/images/025.jpg">  
<p>点击上图指定的，打开文档把路径修改如下就可以了  <strong>注：修改完后要重启Apache服务才能生效</strong>  </p>
<img src="http://qiniu.luzhidong.cn/static/images/026.jpg">  
<p>我们打开浏览，输入localhost就可以看到我们项目的页面了  </p>
<img src="http://qiniu.luzhidong.cn/static/images/027.jpg">  

<h2 id="vscode调试PHP项目"><a href="#vscode调试PHP项目" class="headerlink" title="vscode调试PHP项目"></a>vscode调试PHP项目</h2><ol>
<li><p>vscode打开刚才我复制到www目录的项目  </p>
<img src="http://qiniu.luzhidong.cn/static/images/028.jpg">  
</li>
<li><p>vscode安装<code>PHP Debug</code>和<code>PHP IntelliSense</code>  </p>
<img src="http://qiniu.luzhidong.cn/static/images/029.jpg">  
<p>并给他们配置php安装路径</p>
<img src="http://qiniu.luzhidong.cn/static/images/030.jpg">  
</li>
<li><p>然后我去看看Wampserver的想php-xdebug是否已经启用  </p>
<img src="http://qiniu.luzhidong.cn/static/images/031.jpg">  
<img src="http://qiniu.luzhidong.cn/static/images/032.jpg">  
<img src="http://qiniu.luzhidong.cn/static/images/033.jpg">  
<p>如果上面的几个勾是时好的，就没问题</p>
</li>
<li><p>回到我们的vscode，创建调试文件，如下图  </p>
<img src="http://qiniu.luzhidong.cn/static/images/034.jpg">  
<img src="http://qiniu.luzhidong.cn/static/images/035.jpg">  
<p>上面可以不做任何改动，这里说下<code>&quot;port&quot;: 9000</code>参数，为什么是9000<br>我们去下面目录创建一个phpinfo文件，如下图：</p>
<img src="http://qiniu.luzhidong.cn/static/images/036.jpg">  
<p>然后在浏览器打开<code>localhost/phpInfo.php</code>找到<code>xdebug.remote_port</code><br>这里的数字和上面的创建调试文件对应就可以了  </p>
<img src="http://qiniu.luzhidong.cn/static/images/037.jpg">  
</li>
<li><p>我这里用登录接口做调试，点击登录我的开发工具就可以捕获到断点了</p>
<img src="http://qiniu.luzhidong.cn/static/images/038.jpg">  
</li>
<li><p>如果你的没有自动获取不到断点，那还需要改下Apache配置文件，点击打开下面文件，滚动条拉到最底部或者搜索【xdebug】</p>
<img src="http://qiniu.luzhidong.cn/static/images/039.jpg">  
<p>配置<code>xdebug.remote_autostart = On</code>  </p>
<img src="http://qiniu.luzhidong.cn/static/images/040.jpg">  

</li>
</ol>
<h2 id="Xdebug配置"><a href="#Xdebug配置" class="headerlink" title="Xdebug配置"></a>Xdebug配置</h2><blockquote>
<p>如果Wampserve没有自带php-xdebug的话才需要进行改步骤   </p>
</blockquote>
<p>复制phpinfo整个网页内容,粘贴到<a href="https://xdebug.org/wizard">https://xdebug.org/wizard</a>确定Xdebug版本  </p>
<img src="http://qiniu.luzhidong.cn/static/images/041.jpg">  
<p>点击按钮生成PHP版本对应的XDebug安装文件和说明  </p>
<img src="http://qiniu.luzhidong.cn/static/images/042.jpg">  
<img src="http://qiniu.luzhidong.cn/static/images/043.jpg">  
<p>相信你能懂上面说的，去配置下就可以了，然后检查xdebug是否安装成，怎么检查上面已经有说到  </p>
<p><strong>有其他问题可以在下面留言，看到了我会回复你的</strong></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>vsCode</tag>
      </tags>
  </entry>
  <entry>
    <title>绘声绘影素材分享</title>
    <url>/posts/907f9a38.html</url>
    <content><![CDATA[<h2 id="大概文件目录"><a href="#大概文件目录" class="headerlink" title="大概文件目录"></a>大概文件目录</h2><p>多年收集的绘声绘影素材集合，分享给有需要的你</p>
<h3 id="素材集合1"><a href="#素材集合1" class="headerlink" title="素材集合1"></a>素材集合1</h3><img src="http://qiniu.luzhidong.cn/static/images/044.png">

<h3 id="素材集合2"><a href="#素材集合2" class="headerlink" title="素材集合2"></a>素材集合2</h3><img src="http://qiniu.luzhidong.cn/static/images/045.png">

<h3 id="素材集合3"><a href="#素材集合3" class="headerlink" title="素材集合3"></a>素材集合3</h3><img src="http://qiniu.luzhidong.cn/static/images/046.png">

<h3 id="素材集合4"><a href="#素材集合4" class="headerlink" title="素材集合4"></a>素材集合4</h3><img src="http://qiniu.luzhidong.cn/static/images/047.png">

<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>链接:<a href="https://pan.baidu.com/s/11sUw2uCjpo4O27AYjr3P3A">https://pan.baidu.com/s/11sUw2uCjpo4O27AYjr3P3A</a> </p>
<details>
  <summary>提取码</summary><p>6kac</p>
</details>]]></content>
      <categories>
        <category>绘声绘影</category>
      </categories>
      <tags>
        <tag>绘声绘影</tag>
      </tags>
  </entry>
  <entry>
    <title>常用资源网站推荐</title>
    <url>/posts/e2735779.html</url>
    <content><![CDATA[<h2 id="MacOS-常用破解软件下载网站推荐"><a href="#MacOS-常用破解软件下载网站推荐" class="headerlink" title="MacOS 常用破解软件下载网站推荐"></a>MacOS 常用破解软件下载网站推荐</h2><p><a href="https://www.waitsun.com/">麦氪派(WaitsUn.com) 致力于分享优秀的Mac应用软件</a></p>
<p><a href="https://www.digit77.com/">Digit77.com | 精品Mac应用免费分享</a></p>
<p><a href="https://masuit.com/">懒得勤快，互联网分享精神，勤于发现，乐于分享</a></p>
<p>都是些奇怪的外语网站，如有需要也请自行想办法解决语言障碍和网络障碍。</p>
<p><a href="http://www.downloadsoftware.ir/">http://www.downloadsoftware.ir/</a></p>
<p><a href="https://www.0daydown.com/">https://www.0daydown.com/</a></p>
<p><a href="https://downloadly.ir/">https://downloadly.ir/</a></p>
<p><a href="https://repack.me/">https://repack.me/</a></p>
<p><a href="https://lrepacks.ru/">https://lrepacks.ru/</a></p>
<p><a href="https://mac-torrents.io/">https://mac-torrents.io/</a></p>
<p><a href="https://4howcrack.com/">https://4howcrack.com/</a></p>
<p><a href="https://free4pc.org/">https://free4pc.org/</a></p>
<h2 id="Windows常用破解软件下载网站推荐"><a href="#Windows常用破解软件下载网站推荐" class="headerlink" title="Windows常用破解软件下载网站推荐"></a>Windows常用破解软件下载网站推荐</h2><p><a href="http://www.wuleba.com/">吾乐吧软件站 | 打造一个高品质的绿色软件博客！</a></p>
<p><a href="http://msdn.itellyou.cn/?lang=zh-cn">Windows系统下载</a></p>
<p><a href="http://www.newxitong.com/">专注于win7,Win7纯净版下载,专注于win10,最新系统下载</a></p>
<h2 id="网盘资源搜索"><a href="#网盘资源搜索" class="headerlink" title="网盘资源搜索"></a>网盘资源搜索</h2><p><a href="https://www.52sopan.com/">我爱搜盘 - 搜索百度网盘资源，查找提取密码</a></p>
<p><a href="http://ifkdy.com/">疯狂影视搜索-最有用的影视搜索引擎</a></p>
<p><a href="http://www.daysou.com/">网盘搜索,就上天天搜索-国内优秀网盘搜索引擎</a></p>
<h2 id="VPN网站"><a href="#VPN网站" class="headerlink" title="VPN网站"></a>VPN网站</h2><p><a href="https://www.thatseed.org/">好用便宜的且稳定的vpn网站</a></p>
<p><a href="https://github.com/Shadowsocks-Wiki/shadowsocks">vpn工具下载win、mac、ios、Android都有</a></p>
<h2 id="实用网站"><a href="#实用网站" class="headerlink" title="实用网站"></a>实用网站</h2><p><a href="https://www.reg007.com/">你注册过哪些网站？,通过手机号和邮箱查询你注册过的网站</a></p>
<p><a href="https://tinypng.com/">TinyPNG图片压缩网站</a></p>
<p><a href="https://cubic-bezier.com/#.17,.67,.83,.67">cubic-bezier css动画工具</a></p>
<p><a href="http://www.spritecow.com/">css图片精灵工具</a></p>
<p><a href="https://www.pexels.com/">无版权图片下载网站</a></p>
<p><a href="https://pixabay.com/zh/">惊人的免费图片 - Pixabay</a></p>
<h2 id="一些好玩的网站"><a href="#一些好玩的网站" class="headerlink" title="一些好玩的网站"></a>一些好玩的网站</h2><img src="http://qiniu.luzhidong.cn/static/images/001.png">
<p><a href="https://www.zwcsm.com/">中午吃什么？——今天中午吃什么？</a></p>
<img src="http://qiniu.luzhidong.cn/static/images/002.png">
<p><a href="https://happyhappyhardcore.com/">happy happy hardcore</a></p>
<img src="http://qiniu.luzhidong.cn/static/images/003.png">
<p><a href="http://www.spielzeugz.de/html5/liquid-particles-3D">Liquid Particles 3D | spielzeugz.de/lab </a></p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>资源推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具VsCode-Eslint和代码格式化相关配置</title>
    <url>/posts/874c4e84.html</url>
    <content><![CDATA[<h3 id="eslint-全局安装"><a href="#eslint-全局安装" class="headerlink" title="eslint 全局安装"></a>eslint 全局安装</h3><blockquote>
<p>首先得使用<code>npm</code>安装下面的插件直接复制下面命令到控制台运行就可以了<br><code>npm i -g eslint eslint-plugin-html eslint-plugin-vue babel-eslint</code></p>
</blockquote>
<h3 id="vscode-配置"><a href="#vscode-配置" class="headerlink" title="vscode 配置"></a>vscode 配置</h3><blockquote>
<p>vscode需要安装一下插<br>需要安装【Prettier-Code formatter】和【ESLint】、【Vetur】、【beautify】插件</p>
</blockquote>
<p>打开vscod设置，把下面的配置项复制进去</p>
<img src="http://qiniu.luzhidong.cn/static/images/004.png">
<pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"editor.tabSize"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">"prettier.tabWidth"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">"files.autoSave"</span><span class="token operator">:</span> <span class="token string">"afterDelay"</span><span class="token punctuation">,</span>
    <span class="token property">"files.autoSaveDelay"</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span>
    <span class="token property">"vetur.format.options.tabSize"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">"vetur.validation.template"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"vetur.format.defaultFormatter.html"</span><span class="token operator">:</span> <span class="token string">"js-beautify-html"</span><span class="token punctuation">,</span>
    <span class="token property">"vetur.format.defaultFormatter.js"</span><span class="token operator">:</span> <span class="token string">"prettier"</span><span class="token punctuation">,</span>
    <span class="token property">"vetur.format.defaultFormatterOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">"js-beautify-html"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">"wrap-attributes"</span><span class="token operator">:</span> <span class="token string">"aligned-multiple"</span><span class="token punctuation">,</span>
            <span class="token property">"wrap-attributes-indent-size"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">"wrap-line-length"</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
            <span class="token property">"indent_size"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">"prettier"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">"tabWidth"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">"printWidth"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
            <span class="token property">"singleQuote"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">"jsxBracketSameLine"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"editor.codeActionsOnSave"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">"source.fixAll.eslint"</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h3 id="eslintrc-js"><a href="#eslintrc-js" class="headerlink" title="eslintrc.js"></a>eslintrc.js</h3><p>以下是我公司目前使用的esliint配置的代码规范，仅供参考<br>该配置项是基于vue-cli3搭建的项目配置的</p>
<pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    parserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        parser<span class="token punctuation">:</span> <span class="token string">'babel-eslint'</span><span class="token punctuation">,</span>
        sourceType<span class="token punctuation">:</span> <span class="token string">'module'</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    env<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        browser<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        node<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        es6<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'plugin:vue/recommended'</span><span class="token punctuation">,</span> <span class="token string">'eslint:recommended'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// add your custom rules here</span>
    <span class="token comment" spellcheck="true">//it is base on https://github.com/vuejs/eslint-config-vue</span>
    rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">"sort-imports"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string">"ignoreCase"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">"ignoreMemberSort"</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">"memberSyntaxSortOrder"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"none"</span><span class="token punctuation">,</span> <span class="token string">"all"</span><span class="token punctuation">,</span> <span class="token string">"multiple"</span><span class="token punctuation">,</span> <span class="token string">"single"</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"vue/require-default-prop"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
        <span class="token string">"vue/max-attributes-per-line"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string">"singleline"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token string">"multiline"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token string">"allowFirstLine"</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"vue/singleline-html-element-content-newline"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
        <span class="token string">"vue/multiline-html-element-content-newline"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
        <span class="token string">"vue/order-in-components"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
        <span class="token string">"vue/name-property-casing"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"PascalCase"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"vue/no-v-html"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
        <span class="token string">"vue/html-closing-bracket-newline"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string">"singleline"</span><span class="token punctuation">:</span> <span class="token string">"never"</span><span class="token punctuation">,</span>
            <span class="token string">"multiline"</span><span class="token punctuation">:</span> <span class="token string">"never"</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"vue/html-indent"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string">"attribute"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string">"baseIndent"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string">"closeBracket"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string">"alignAttributesVertically"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">"ignores"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"indent"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制使用一致的缩进</span>
            <span class="token string">'SwitchCase'</span><span class="token punctuation">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'no-mixed-spaces-and-tabs'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止空格和 tab 的混合缩进</span>
        <span class="token string">'arrow-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制箭头函数的箭头前后使用一致的空格</span>
            <span class="token string">'before'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">'after'</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'block-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'always'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止或强制在代码块中开括号前和闭括号后有空格</span>
        <span class="token string">'brace-style'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'1tbs'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在代码块中使用一致的大括号风格</span>
            <span class="token string">'allowSingleLine'</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'camelcase'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制使用骆驼拼写法命名约定</span>
            <span class="token string">'properties'</span><span class="token punctuation">:</span> <span class="token string">'always'</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'comma-dangle'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止末尾逗号</span>
        <span class="token string">'comma-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在逗号前后使用一致的空格</span>
            <span class="token string">'before'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">'after'</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'comma-style'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'last'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制使用一致的逗号风格</span>
        <span class="token string">'curly'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'multi-line'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制所有控制语句使用一致的括号风格</span>
        <span class="token string">'dot-location'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'property'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制在点号之前和之后一致的换行</span>
        <span class="token string">'eol-last'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止文件末尾存在空行</span>
        <span class="token comment" spellcheck="true">//'eqeqeq': [2, 'allow-null'], // 要求使用 === 和 !==</span>
        <span class="token string">'key-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在对象字面量的属性中键和值之间使用一致的间距</span>
            <span class="token string">'beforeColon'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">'afterColon'</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'keyword-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在关键字前后使用一致的空格</span>
            <span class="token comment" spellcheck="true">// "after": true,</span>
            <span class="token comment" spellcheck="true">// "before": true </span>
            <span class="token string">"overrides"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">"if"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">"after"</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token string">"before"</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">"else"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">"after"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                    <span class="token string">"before"</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">"for"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">"after"</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token string">"before"</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">"while"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">"after"</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token string">"before"</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'new-cap'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 要求构造函数首字母大写</span>
            <span class="token string">'newIsCap'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">'capIsNew'</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'new-parens'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求调用无参构造函数时有圆括号</span>
        <span class="token string">'no-array-constructor'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 Array 构造函数</span>
        <span class="token string">'no-caller'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 arguments.caller 或 arguments.callee</span>
        <span class="token string">'no-console'</span><span class="token punctuation">:</span> <span class="token string">'off'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 console</span>
        <span class="token string">'no-class-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止修改类声明的变量</span>
        <span class="token string">'no-cond-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止条件表达式中出现赋值操作符</span>
        <span class="token string">'no-const-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止修改 const 声明的变量</span>
        <span class="token string">'no-control-regex'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在正则表达式中使用控制字符</span>
        <span class="token string">'no-delete-var'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止删除变量</span>
        <span class="token string">'no-dupe-args'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止 function 定义中出现重名参数</span>
        <span class="token string">'no-dupe-class-members'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止类成员中出现重复的名称</span>
        <span class="token string">'no-dupe-keys'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止对象字面量中出现重复的 key</span>
        <span class="token string">'no-duplicate-case'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止出现重复的 case 标签</span>
        <span class="token string">'no-empty-character-class'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在正则表达式中使用空字符集</span>
        <span class="token string">'no-empty-pattern'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止使用空解构模式</span>
        <span class="token string">'no-eval'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 eval()</span>
        <span class="token string">'no-ex-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止对 catch 子句的参数重新赋值</span>
        <span class="token string">'no-extend-native'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止扩展原生类型</span>
        <span class="token string">'no-extra-parens'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'functions'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止不必要的括号</span>
        <span class="token string">'no-fallthrough'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止 case 语句落空</span>
        <span class="token string">'no-floating-decimal'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止数字字面量中使用前导和末尾小数点</span>
        <span class="token string">'no-func-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止对 function 声明重新赋值</span>
        <span class="token string">'no-implied-eval'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止使用类似 eval() 的方法</span>
        <span class="token string">'no-invalid-regexp'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止 RegExp 构造函数中存在无效的正则表达式字符串</span>
        <span class="token string">'no-irregular-whitespace'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在字符串和注释之外不规则的空白</span>
        <span class="token string">'no-label-var'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 不允许标签与变量同名</span>
        <span class="token string">'no-labels'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 禁用标签语句</span>
            <span class="token string">'allowLoop'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">'allowSwitch'</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'no-lone-blocks'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用不必要的嵌套块</span>
        <span class="token string">'no-multi-spaces'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止使用多个空格</span>
        <span class="token string">'no-multi-str'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止使用多行字符串</span>
        <span class="token string">'no-multiple-empty-lines'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 禁止出现多行空行</span>
            <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'no-new-require'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止调用 require 时使用 new 操作符</span>
        <span class="token string">'no-new-symbol'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止 Symbolnew 操作符和 new 一起使用</span>
        <span class="token string">'no-new-wrappers'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止对 String，Number 和 Boolean 使用 new 操作符</span>
        <span class="token string">'no-obj-calls'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止把全局对象作为函数调用</span>
        <span class="token string">'no-octal'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用八进制字面量</span>
        <span class="token string">'no-octal-escape'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在字符串中使用八进制转义序列</span>
        <span class="token string">'no-path-concat'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止对 __dirname 和 __filename 进行字符串连接</span>
        <span class="token string">'no-proto'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 __proto__ 属性</span>
        <span class="token string">'no-redeclare'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止多次声明同一变量</span>
        <span class="token string">'no-regex-spaces'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//     不允许正则表达式文字中的多个空格</span>
        <span class="token string">'no-return-assign'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'except-parens'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在 return 语句中使用赋值语句</span>
        <span class="token string">'no-self-assign'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止自我赋值</span>
        <span class="token string">'no-self-compare'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止自身比较</span>
        <span class="token string">'no-sequences'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用逗号操作符</span>
        <span class="token string">'no-shadow-restricted-names'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止将标识符定义为受限的名字</span>
        <span class="token string">'no-spaced-func'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止在函数标识符和其调用之间有空格 (func-call-spacing)</span>
        <span class="token string">'no-sparse-arrays'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用稀疏数组</span>
        <span class="token string">'no-this-before-super'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在构造函数中，在调用 super() 之前使用 this 或 super</span>
        <span class="token string">'no-throw-literal'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止抛出异常字面量</span>
        <span class="token string">'no-trailing-spaces'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用行尾空格</span>
        <span class="token string">'no-undef'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用未声明的变量，除非它们在 </span><span class="token comment" spellcheck="true">/*global */</span> 注释中被提到
        <span class="token string">'no-undef-init'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止将变量初始化为 undefined</span>
        <span class="token string">'no-unexpected-multiline'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止出现令人困惑的多行表达式</span>
        <span class="token string">'no-unmodified-loop-condition'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用一成不变的循环条件</span>
        <span class="token string">'no-unneeded-ternary'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 禁止可以在有更简单的可替代的表达式时使用三元操作符</span>
            <span class="token string">'defaultAssignment'</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'no-unreachable'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在return、throw、continue 和 break 语句之后出现不可达代码</span>
        <span class="token string">'no-unsafe-finally'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在 finally 语句块中出现控制流语句</span>
        <span class="token string">'no-unused-vars'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 禁止出现未使用过的变量</span>
            <span class="token string">'vars'</span><span class="token punctuation">:</span> <span class="token string">'all'</span><span class="token punctuation">,</span>
            <span class="token string">'args'</span><span class="token punctuation">:</span> <span class="token string">'none'</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'no-useless-call'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止不必要的 .call() 和 .apply()</span>
        <span class="token string">'no-useless-computed-key'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止在对象中使用不必要的计算属性</span>
        <span class="token string">'no-useless-constructor'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用不必要的构造函数</span>
        <span class="token string">'no-useless-escape'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用不必要的转义字符</span>
        <span class="token string">'no-whitespace-before-property'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁止属性前有空白</span>
        <span class="token string">'no-with'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 with 语句</span>
        <span class="token string">'one-var'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制函数中的变量要么一起声明要么分开声明</span>
            <span class="token string">'initialized'</span><span class="token punctuation">:</span> <span class="token string">'never'</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'operator-linebreak'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'before'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制操作符使用一致的换行符</span>
        <span class="token string">'padded-blocks'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止块内填充</span>
        <span class="token comment" spellcheck="true">// 'quotes': [2, 'double', { // 强制使用一致的反勾号、双引号或单引号</span>
        <span class="token comment" spellcheck="true">//     'avoidEscape': true,</span>
        <span class="token comment" spellcheck="true">//     'allowTemplateLiterals': true</span>
        <span class="token comment" spellcheck="true">// }],</span>
        <span class="token string">'semi'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'always'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string">"omitLastInOneLineBlock"</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止使用分号代替 ASI</span>
        <span class="token string">'semi-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制分号之前和之后使用一致的空格</span>
            <span class="token string">'before'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">'after'</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'space-before-blocks'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'always'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制在块之前使用一致的空格</span>
        <span class="token string">'space-before-function-paren'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制在 function的左括号之前使用一致的空格</span>
        <span class="token string">'space-in-parens'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制在圆括号内使用一致的空格</span>
        <span class="token string">'space-infix-ops'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求操作符周围有空格</span>
        <span class="token string">'space-unary-ops'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在一元操作符前后使用一致的空格</span>
            <span class="token string">'words'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">'nonwords'</span><span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'spaced-comment'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'always'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在注释中 // 或 /* 使用一致的空格</span>
            <span class="token string">'markers'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'globals'</span><span class="token punctuation">,</span> <span class="token string">'eslint'</span><span class="token punctuation">,</span> <span class="token string">'eslint-disable'</span><span class="token punctuation">,</span> <span class="token string">'*package'</span><span class="token punctuation">,</span> <span class="token string">'!'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'template-curly-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止模板字符串中的嵌入表达式周围空格的使用</span>
        <span class="token string">'use-isnan'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求使用 isNaN() 检查 NaN</span>
        <span class="token string">'valid-typeof'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制 typeof 表达式与有效的字符串进行比较</span>
        <span class="token string">'wrap-iife'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'any'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求 IIFE 使用括号括起来</span>
        <span class="token string">'yield-star-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'both'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 强制在 yield* 表达式中 * 周围使用空格</span>
        <span class="token string">'yoda'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求或禁止 “Yoda” 条件</span>
        <span class="token string">'prefer-const'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要求使用 const 声明那些声明后不再被修改的变量</span>
        <span class="token string">'no-debugger'</span><span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 禁用 debugger</span>
        <span class="token string">'object-curly-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'always'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 强制在大括号中使用一致的空格</span>
            objectsInObjects<span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">'array-bracket-spacing'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'never'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 强制数组方括号中使用一致的空格</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="eslint-解释"><a href="#eslint-解释" class="headerlink" title="eslint 解释"></a>eslint 解释</h3><pre class=" language-json"><code class="language-json"><span class="token property">"no-alert"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用alert confirm prompt
<span class="token property">"no-array-constructor"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用数组构造器
<span class="token property">"no-bitwise"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用按位运算符
<span class="token property">"no-caller"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止使用arguments.caller或arguments.callee
<span class="token property">"no-catch-shadow"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止catch子句参数与外部作用域变量同名
<span class="token property">"no-class-assign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止给类赋值
<span class="token property">"no-cond-assign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止在条件表达式中使用赋值语句
<span class="token property">"no-console"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用console
<span class="token property">"no-const-assign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止修改const声明的变量
<span class="token property">"no-constant-condition"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止在条件中使用常量表达式 if(<span class="token boolean">true</span><span class="token punctuation">)</span> if(<span class="token number">1</span><span class="token punctuation">)</span>
<span class="token property">"no-continue"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用continue
<span class="token property">"no-control-regex"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止在正则表达式中使用控制字符
<span class="token property">"no-debugger"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用debugger
<span class="token property">"no-delete-var"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能对var声明的变量使用delete操作符
<span class="token property">"no-div-regex"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//不能使用看起来像除法的正则表达式/=foo/
<span class="token property">"no-dupe-keys"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//在创建对象字面量时不允许键重复 <span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
<span class="token property">"no-dupe-args"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//函数参数不能重复
<span class="token property">"no-duplicate-case"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//switch中的case标签不能重复
<span class="token property">"no-else-return"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//如果if语句里面有return<span class="token punctuation">,</span>后面不能跟else语句
<span class="token property">"no-empty"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//块语句中的内容不能为空
<span class="token property">"no-empty-character-class"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//正则表达式中的<span class="token punctuation">[</span><span class="token punctuation">]</span>内容不能为空
<span class="token property">"no-empty-label"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用空label
<span class="token property">"no-eq-null"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止对<span class="token null">null</span>使用==或!=运算符
<span class="token property">"no-eval"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止使用eval
<span class="token property">"no-ex-assign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止给catch语句中的异常参数赋值
<span class="token property">"no-extend-native"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止扩展native对象
<span class="token property">"no-extra-bind"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止不必要的函数绑定
<span class="token property">"no-extra-boolean-cast"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止不必要的bool转换
<span class="token property">"no-extra-parens"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止非必要的括号
<span class="token property">"no-extra-semi"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止多余的冒号
<span class="token property">"no-fallthrough"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止switch穿透
<span class="token property">"no-floating-decimal"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止省略浮点数中的<span class="token number">0</span> .<span class="token number">5</span> <span class="token number">3</span>.
<span class="token property">"no-func-assign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止重复的函数声明
<span class="token property">"no-implicit-coercion"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止隐式转换
<span class="token property">"no-implied-eval"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用隐式eval
<span class="token property">"no-inline-comments"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止行内备注
<span class="token property">"no-inner-declarations"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"functions"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//禁止在块语句中使用声明（变量或函数）
<span class="token property">"no-invalid-regexp"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止无效的正则表达式
<span class="token property">"no-invalid-this"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止无效的this，只能用在构造器，类，对象字面量
<span class="token property">"no-irregular-whitespace"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能有不规则的空格
<span class="token property">"no-iterator"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用__iterator__ 属性
<span class="token property">"no-label-var"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//label名不能与var声明的变量名相同
<span class="token property">"no-labels"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止标签声明
<span class="token property">"no-lone-blocks"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止不必要的嵌套块
<span class="token property">"no-lonely-if"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止else语句内只有if语句
<span class="token property">"no-loop-func"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）
<span class="token property">"no-mixed-requires"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//声明时不能混用声明类型
<span class="token property">"no-mixed-spaces-and-tabs"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//禁止混用tab和空格
<span class="token property">"linebreak-style"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"windows"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//换行风格
<span class="token property">"no-multi-spaces"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//不能用多余的空格
<span class="token property">"no-multi-str"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//字符串不能用\换行
<span class="token property">"no-multiple-empty-lines"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">"max"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//空行最多不能超过<span class="token number">2</span>行
<span class="token property">"no-native-reassign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能重写native对象
<span class="token property">"no-negated-in-lhs"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//in 操作符的左边不能有!
<span class="token property">"no-nested-ternary"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用嵌套的三目运算
<span class="token property">"no-new"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止在使用new构造一个实例后不赋值
<span class="token property">"no-new-func"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//禁止使用new Function
<span class="token property">"no-new-object"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用new Object(<span class="token punctuation">)</span>
<span class="token property">"no-new-require"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用new require
<span class="token property">"no-new-wrappers"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用new创建包装实例，new String new Boolean new Number
<span class="token property">"no-obj-calls"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能调用内置的全局对象，比如Math(<span class="token punctuation">)</span> JSON(<span class="token punctuation">)</span>
<span class="token property">"no-octal"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用八进制数字
<span class="token property">"no-octal-escape"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用八进制转义序列
<span class="token property">"no-param-reassign"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止给参数重新赋值
<span class="token property">"no-path-concat"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//node中不能使用__dirname或__filename做路径拼接
<span class="token property">"no-plusplus"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用++，--
<span class="token property">"no-process-env"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用process.env
<span class="token property">"no-process-exit"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用process.exit(<span class="token punctuation">)</span>
<span class="token property">"no-proto"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止使用__proto__属性
<span class="token property">"no-redeclare"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止重复声明变量
<span class="token property">"no-regex-spaces"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止在正则表达式字面量中使用多个空格 /foo bar/
<span class="token property">"no-restricted-modules"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//如果禁用了指定模块，使用就会报错
<span class="token property">"no-return-assign"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//return 语句中不能有赋值表达式
<span class="token property">"no-script-url"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用javascript<span class="token operator">:</span>void(<span class="token number">0</span><span class="token punctuation">)</span>
<span class="token property">"no-self-compare"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能比较自身
<span class="token property">"no-sequences"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用逗号运算符
<span class="token property">"no-shadow"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名
<span class="token property">"no-shadow-restricted-names"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//严格模式中规定的限制标识符不能作为声明时的变量名使用
<span class="token property">"no-spaced-func"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//函数调用时 函数名与(<span class="token punctuation">)</span>之间不能有空格
<span class="token property">"no-sparse-arrays"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止稀疏数组， <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token property">"no-sync"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//nodejs 禁止同步方法
<span class="token property">"no-ternary"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁止使用三目运算符
<span class="token property">"no-trailing-spaces"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//一行结束后面不要有空格
<span class="token property">"no-this-before-super"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//在调用super(<span class="token punctuation">)</span>之前不能使用this或super
<span class="token property">"no-throw-literal"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止抛出字面量错误 throw <span class="token string">"error"</span><span class="token punctuation">;</span>
<span class="token property">"no-undef"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//不能有未定义的变量
<span class="token property">"no-undef-init"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//变量初始化时不能直接给它赋值为undefined
<span class="token property">"no-undefined"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能使用undefined
<span class="token property">"no-unexpected-multiline"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//避免多行表达式
<span class="token property">"no-underscore-dangle"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//标识符不能以_开头或结尾
<span class="token property">"no-unneeded-ternary"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止不必要的嵌套 var isYes = answer === <span class="token number">1</span> ? <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token property">"no-unreachable"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//不能有无法执行的代码
<span class="token property">"no-unused-expressions"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止无用的表达式
<span class="token property">"no-unused-vars"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">"vars"</span><span class="token operator">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span> <span class="token property">"args"</span><span class="token operator">:</span> <span class="token string">"after-used"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//不能有声明后未被使用的变量或参数
<span class="token property">"no-use-before-define"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//未定义前不能使用
<span class="token property">"no-useless-call"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止不必要的call和apply
<span class="token property">"no-void"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁用void操作符
<span class="token property">"no-var"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//禁用var，用let和const代替
<span class="token property">"no-warning-comments"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token property">"terms"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"todo"</span><span class="token punctuation">,</span> <span class="token string">"fixme"</span><span class="token punctuation">,</span> <span class="token string">"xxx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location"</span><span class="token operator">:</span> <span class="token string">"start"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//不能有警告备注
<span class="token property">"no-with"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁用with

<span class="token property">"array-bracket-spacing"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//是否允许非空数组里面有多余的空格
<span class="token property">"arrow-parens"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//箭头函数用小括号括起来
<span class="token property">"arrow-spacing"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//=>的前/后括号
<span class="token property">"accessor-pairs"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//在对象中使用getter/setter
<span class="token property">"block-scoped-var"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//块语句中使用var
<span class="token property">"brace-style"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"1tbs"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//大括号风格
<span class="token property">"callback-return"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//避免多次调用回调什么的
<span class="token property">"camelcase"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//强制驼峰法命名
<span class="token property">"comma-dangle"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//对象字面量项尾不能有逗号
<span class="token property">"comma-spacing"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//逗号前后的空格
<span class="token property">"comma-style"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"last"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//逗号风格，换行时在行首还是行尾
<span class="token property">"complexity"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//循环复杂度
<span class="token property">"computed-property-spacing"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//是否允许计算后的键名什么的
<span class="token property">"consistent-return"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//return 后面是否允许省略
<span class="token property">"consistent-this"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"that"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//this别名
<span class="token property">"constructor-super"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//非派生类不能调用super，派生类必须调用super
<span class="token property">"curly"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"all"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//必须使用 if(<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> 中的<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token property">"default-case"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//switch语句最后必须有default
<span class="token property">"dot-location"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//对象访问符的位置，换行的时候在行首还是行尾
<span class="token property">"dot-notation"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token property">"allowKeywords"</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//避免不必要的方括号
<span class="token property">"eol-last"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//文件以单一的换行符结束
<span class="token property">"eqeqeq"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//必须使用全等
<span class="token property">"func-names"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//函数表达式必须有名字
<span class="token property">"func-style"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"declaration"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//函数风格，规定只能使用函数声明/函数表达式
<span class="token property">"generator-star-spacing"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//生成器函数*的前后空格
<span class="token property">"guard-for-in"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//for in循环要用if语句过滤
<span class="token property">"handle-callback-err"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//nodejs 处理错误
<span class="token property">"id-length"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//变量名长度
<span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//缩进风格
<span class="token property">"init-declarations"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//声明时必须赋初值
<span class="token property">"key-spacing"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token property">"beforeColon"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token property">"afterColon"</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//对象字面量中冒号的前后空格
<span class="token property">"lines-around-comment"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//行前/行后备注
<span class="token property">"max-depth"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//嵌套块深度
<span class="token property">"max-len"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//字符串最大长度
<span class="token property">"max-nested-callbacks"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//回调嵌套深度
<span class="token property">"max-params"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//函数最多只能有<span class="token number">3</span>个参数
<span class="token property">"max-statements"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//函数内最多有几个声明
<span class="token property">"new-cap"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用
<span class="token property">"new-parens"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//new时必须加小括号
<span class="token property">"newline-after-var"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//变量声明后是否需要空一行
<span class="token property">"object-curly-spacing"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//大括号内是否允许不必要的空格
<span class="token property">"object-shorthand"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//强制对象字面量缩写语法
<span class="token property">"one-var"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>//连续声明
<span class="token property">"operator-assignment"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//赋值运算符 += -=什么的
<span class="token property">"operator-linebreak"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"after"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//换行时运算符在行尾还是行首
<span class="token property">"padded-blocks"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//块语句内行首行尾是否要空行
<span class="token property">"prefer-const"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//首选const
<span class="token property">"prefer-spread"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//首选展开运算
<span class="token property">"prefer-reflect"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//首选Reflect的方法
<span class="token property">"quotes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"single"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//引号类型 `` <span class="token string">""</span> ''
<span class="token property">"quote-props"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//对象字面量中的属性名是否强制双引号
<span class="token property">"radix"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//parseInt必须指定第二个参数
<span class="token property">"id-match"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//命名检测
<span class="token property">"require-yield"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//生成器函数必须有yield
<span class="token property">"semi"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//语句强制分号结尾
<span class="token property">"semi-spacing"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">"before"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token property">"after"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//分号前后空格
<span class="token property">"sort-vars"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//变量声明时排序
<span class="token property">"space-after-keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//关键字后面是否要空一格
<span class="token property">"space-before-blocks"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//不以新行开始的块<span class="token punctuation">{</span>前面要不要有空格
<span class="token property">"space-before-function-paren"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//函数定义时括号前面要不要有空格
<span class="token property">"space-in-parens"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//小括号里面要不要有空格
<span class="token property">"space-infix-ops"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//中缀操作符周围要不要有空格
<span class="token property">"space-return-throw-case"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//return throw case后面要不要加空格
<span class="token property">"space-unary-ops"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token property">"words"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token property">"nonwords"</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//一元运算符的前/后要不要加空格
<span class="token property">"spaced-comment"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//注释风格要不要有空格什么的
<span class="token property">"strict"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//使用严格模式
<span class="token property">"use-isnan"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//禁止比较时使用NaN，只能用isNaN(<span class="token punctuation">)</span>
<span class="token property">"valid-jsdoc"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//jsdoc规则
<span class="token property">"valid-typeof"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//必须使用合法的typeof的值
<span class="token property">"vars-on-top"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>//var必须放在作用域顶部
<span class="token property">"wrap-iife"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"inside"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>//立即执行函数表达式的小括号风格
<span class="token property">"wrap-regex"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>//正则表达式字面量用小括号包起来
<span class="token property">"yoda"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span>//禁止尤达条件
</code></pre>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>eslitn</tag>
        <tag>开发工具</tag>
      </tags>
  </entry>
</search>
